<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Just Pic</title>
        <description>Just Pic - </description>
        <link>http://i.justpic.org</link>
        <link>http://i.justpic.org</link>
        <lastBuildDate>2014-09-07T19:28:14+08:00</lastBuildDate>
        <pubDate>2014-09-07T19:28:14+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>ubuntu 14.04 install haskell</title>
                <description>&lt;p&gt;haskell是一种函数编程式语言，ghc是Glasgow Haskell Compiler的简称，也是Haskell Platform的基础.   下面是安装ghc的步骤：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;      
    sudo aptitude build-dep ghc
    sudo aptitude install git autoconf automake libtool make ncurses-dev g++ llvm gpaco
    wget https://www.haskell.org/ghc/dist/7.8.3/ghc-7.8.3-src.tar.bz2
    tar jxvf ghc-7.8.3-src.tar.bz2
    &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ghc-7.8.3-src
    ./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/ghc
    make -j8
    sudo paco -D make install
    sudo aptitude purge ghc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编辑.bashrc文件&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/ghc/bin:$PATH&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
    ghci   &lt;span class=&quot;c&quot;&gt;#验证是否安装成功&lt;/span&gt;
    sudo aptitude purge ghc 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cabal是Haskell的一个package，提供Haskell包安装框架，类似python的easy_install、debian的apt-get等。
cabal-install是另一个Haskell包安装库，提供了cabal命令行程序，该程序在安装新包时会自动解决包依赖关系。
安装了cabal-install就可以了，因为cabal-install依赖与cabal，安装程序会自动下载cabal并安装。
下面是安装cabal的步骤&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    wget http://www.haskell.org/cabal/release/cabal-install-1.20.0.3/cabal-install-1.20.0.3.tar.gz
    tar zxvf cabal-install-1.20.0.3.tar.gz
    &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;cabal-install-2.10.0.3
    ./bootstrap.sh
    vim ~/.bahsrc
    &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.cabal/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
    cabal update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装包haskell-platform中包含这些包，但是由于使用apt-get安装时不能获得最新的版本或者会出现一些问题，比如network-2.6.0.2通过cabal总是安装不上，报编译错误
这种使用源码安装的方式很好的解决了这些问题。非常高效！&lt;/p&gt;

&lt;p&gt;在安装相关haskell包的时候可能会出现broken package错误，可以通过以下命令在haskell中移除broken package&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    ghc-pkg check --simple-output &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xargs -n 1 ghc-pkg unregister --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</description>
                <link>http://i.justpic.org/2014/09/06/ubuntu-1404-install-haskell</link>
                <guid>http://i.justpic.org/2014/09/06/ubuntu-1404-install-haskell</guid>
                <pubDate>2014-09-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>模式识别</title>
                <description>&lt;p&gt; 关于模式识别和计算机应用方向, 我认为可以选择的主题(仅是己见)
1.  数学方面
1)  矩阵的各种分解. 比如, LU, QR, Cholesky, SVD, Polar.
2)  广义逆与子空间
3)  最小二乘法, 特别齐性方程Ax=b的各种解法及其几何意义
4)  凸分析与凸优化的基本知识及其几何意义
5)  常用的几种优化方法.
其实以上在某种意义下是相通的.
6)  微分几何、黎曼几何的基本概念和知识
7)  李群与李代数的基本知识
8)  图和谱图的基本知识
以上知识，我认为，是作为一个做算法的研究者都应该了解或是掌握的数学知识
9)  模糊数学（就个人而言，我十分不情愿把这个方法列在这里，因为我认为模糊数学不是&lt;/p&gt;

&lt;p&gt;好数学，是玩游戏，做模糊数学有关的东西前途不明朗）
10) 时间序列分析的主要方法和最近新方法.
11) 分形和混沌
12) 常用微分方程的基本类型和解法
2．专业方向
   1）PCA, FA, MDS
      这3个事最典型的降维方法，也是最古典的。但是他们已经出现很多变种，应用在计&lt;/p&gt;

&lt;p&gt;算机的各个领域。拿PCA做例子，比如Local PCA, Sparse PCA, Probabilistic PCA, Non&lt;/p&gt;

&lt;p&gt;negative PCA.
   2) ICA ( Independent Component Analysis )
     独立元分析是降维分析中又一经典方法，其有很多种形式。在语音识别，人脸识别等&lt;/p&gt;

&lt;p&gt;分类领域中广泛应用。最近又有Nonnegative ICA 出现。特别地李群与李代数（Toral子代&lt;/p&gt;

&lt;p&gt;数）的引入为这个经典的方法有注入了新鲜的活力。
   3）NMF ( Nonnegative Matrix Factorization)
      非负矩阵因子是99年发表在Nature上的一片经典论文。它是继PCA and ICA之后的又&lt;/p&gt;

&lt;p&gt;一产生广泛影响的降维方法。非负矩阵因子有着明显的几何意义，使其潜力无限，但又非&lt;/p&gt;

&lt;p&gt;常难以发掘。
   4）LLE ( Locally Linear Embedding ) and LE ( Laplacian Eigenmaps)
      局部线性嵌入和拉普拉斯特征映射分别发表在Science (2000) 和 Neural Computa&lt;/p&gt;

&lt;p&gt;tion (2003)上，是非线性降维的里程碑。他们在计算机应用领域产生深远影响是大势所趋&lt;/p&gt;

&lt;p&gt;。特别LE的线性形式LPP (Locality Preserving Projections) 在人脸识别领域已大显身&lt;/p&gt;

&lt;p&gt;手，继Fisherfaces又一著名方法Laplacianfaces就是基于LPP. 另外基于谱聚类的方法也
可以很容易的从LE中导
出，它正是图像分割领域研究的热点。
   这两种方法我自发的报告会中 仔细介绍过。
   5）HMM (Hidden Markov Model)
   6)  Wavelet
   7)  RBFNN (Radial Base Function Neural Network) and SOM (Self-organizing ma&lt;/p&gt;

&lt;p&gt;p)
      径向基神经网络和自组织映射是神经网络中最常用的2种方法。随着几何优化的方法&lt;/p&gt;

&lt;p&gt;引入神经网络，这些方法又焕发出新的生机和用途。
   8）SVM （Support Vector Machine）
      支持向量机是数据挖掘中的一朵奇葩，已经广泛应用于各种任务中。随着几何方法&lt;/p&gt;

&lt;p&gt;和Clifford 代数的引入，SVM必将更加充满生机。
   9）EM (Expectation Maximum)
      EM算法是参数估计中最经典、最有效、而且最常用的方法。常用于 Bayesian Mode&lt;/p&gt;

&lt;p&gt;l or GMM中
   10）Guassian Mixture Model
      GMM是信号处理和模式识别中最经典的方法，也是最广泛应用的方法，比如，语音识&lt;/p&gt;

&lt;p&gt;别、人脸识别、目标监测、图像分割
    11）Bayesian Model or Bayesian Network
      贝叶斯模型或是贝叶斯网络的广泛应用就不用多言语了吧。
    其中 9）、10）、11）经常是成三成双的出现
    12）Kernel Methods
       基于核的方法正是现在国际领域中研究的热点，基本上大多数经典方法都已核化，&lt;/p&gt;

&lt;p&gt;比如Kernel PCA, Kernel FA, Kernel LDA, Kernel-based MDS, LLE, LE, ……..&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/08/22/</link>
                <guid>http://i.justpic.org/2014/08/</guid>
                <pubDate>2014-08-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>排序总结</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/08/17/</link>
                <guid>http://i.justpic.org/2014/08/</guid>
                <pubDate>2014-08-17T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python finance</title>
                <description>&lt;p&gt;====books=====&lt;/p&gt;

&lt;p&gt;Financial Modeling in python&lt;/p&gt;

&lt;p&gt;python for finance&lt;/p&gt;

&lt;p&gt;Building Machine Learning System with Python&lt;/p&gt;

&lt;p&gt;====Softwares====&lt;/p&gt;

&lt;p&gt;pandas&lt;/p&gt;

&lt;p&gt;scikit-learn&lt;/p&gt;

&lt;p&gt;quantlib&lt;/p&gt;

&lt;p&gt;ta-lib&lt;/p&gt;

&lt;p&gt;zipline&lt;/p&gt;

&lt;p&gt;====Online Resource====&lt;/p&gt;

&lt;p&gt;Quantopian&lt;/p&gt;

&lt;p&gt;pythonquants&lt;/p&gt;

&lt;p&gt;ultratrade&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/08/16/python-finance</link>
                <guid>http://i.justpic.org/2014/08/16/python-finance</guid>
                <pubDate>2014-08-16T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>线性代数中的矩阵</title>
                <description>&lt;p&gt;  &lt;a href=&quot;http://www.52cs.org/?p=175&quot;&gt;矩阵的理解&lt;/a&gt; &lt;br/&gt;
  &lt;a href=&quot;http://www.blog.huajh7.com/variational-bayes&quot;&gt;变分&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;https://sites.google.com/site/igorcarron2/matrixfactorizations&quot;&gt;矩阵分解的森林(The Advance Matrix Factorization Jungle)&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/08/10/</link>
                <guid>http://i.justpic.org/2014/08/</guid>
                <pubDate>2014-08-10T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>ScatNet</title>
                <description>&lt;p&gt;散射卷积网络通过卷积网络对图像的小波系数做级联运算，运用深度学习的思想，生成树状结构的散射系数，使用散射系数作为特征进行学习。&lt;/p&gt;

&lt;p&gt;参考文章与资料：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://arxiv.org/abs/1203.1513&quot;&gt;Invariant Scattering Convolution Networks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;High Dimensional Classification with Invariant Deep Networks &lt;a href=&quot;http://www.itsoc.org/resources/media/isit-2013-istanbul/MallatISIT2013.pdf&quot;&gt;ppt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.di.ens.fr/data/software/scatnet/&quot;&gt;ScatNet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dailymotion.com/video/x10r1zw_stephane-mallat-mathematicien_tech&quot;&gt;S.Mallat的一个访谈&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/wavelet,research,pattern%20recognition/2014/08/09/scatnet</link>
                <guid>http://i.justpic.org/wavelet,research,pattern%20recognition/2014/08/09/scatnet</guid>
                <pubDate>2014-08-09T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python web development</title>
                <description>&lt;p&gt;两篇很好的文章：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://siddontang.github.io/high-performance-server/2012/09/02/step-by-step-network/&quot;&gt;深入浅出网络模型&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://berb.github.io/diploma-thesis/original/index.html&quot;&gt;Concurrent Programming for Scalable Web Architectures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用python web框架开发项目&lt;/p&gt;

&lt;p&gt;技术选型&lt;/p&gt;

&lt;p&gt;tornado  &amp;ndash;epool，pre_fork,异步io的集合体&lt;/p&gt;

&lt;p&gt;mongodb  &amp;ndash;nosql技术，读快写慢&lt;/p&gt;

&lt;p&gt;rq/mrq   &amp;ndash;redis队列，传递消息，方便快捷&lt;/p&gt;

&lt;p&gt;pandas   &amp;ndash;处理数据的好帮手，方便操作数据，模型优化可借用scikit-learn&lt;/p&gt;

&lt;p&gt;参考项目&lt;/p&gt;

&lt;p&gt;nbviewer &amp;ndash;tornado中如何做并行化 futures&lt;/p&gt;

&lt;p&gt;pyspider &amp;ndash;flask 后台队列的实现和控制，架构方面&lt;/p&gt;

&lt;p&gt;云存储&lt;/p&gt;

&lt;p&gt;baidupcs-sdk &amp;ndash;免费，但有token限制，可以使用refresh token使其永久有效&lt;/p&gt;

&lt;p&gt;pandas io方面一直没有什么好的工具，hdf5，mongodb都是相对较好的选择&lt;/p&gt;

&lt;p&gt;hdf5的使用可参考&lt;a href=&quot;https://github.com/yinhm/datafeed&quot;&gt;datafeed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14262433/large-data-work-flows-using-pandas&quot;&gt;large data flow in pandas&lt;/a&gt;
mongodb的使用可参考&lt;a href=&quot;&quot;&gt;openquant&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/08/07/python-web-development</link>
                <guid>http://i.justpic.org/2014/08/07/python-web-development</guid>
                <pubDate>2014-08-07T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>sort algorithm</title>
                <description>&lt;p&gt;对于堆排序，自底向上构建堆，自上而下堆排序。&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/07/30/sort-algorithm</link>
                <guid>http://i.justpic.org/2014/07/30/sort-algorithm</guid>
                <pubDate>2014-07-30T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python optimization</title>
                <description>&lt;p&gt; 首先使用cprofile分析单进程，单线程环境中的性能差的部分，进行算法改写和优化，必要情况下可以通过cpython嵌入c/c++代码。&lt;/p&gt;

&lt;p&gt; 判断程序为io-bound任务还是cpu-bound任务。&lt;/p&gt;

&lt;p&gt; io-bound任务程序使用gevent来优化&lt;/p&gt;

&lt;p&gt; cpu-bound任务程序使用multiprocess来优化&lt;/p&gt;

&lt;p&gt; 使用队列服务进行任务分发，将大任务分成多个子任务部署于多机环境（集群）。注意：调度和单点故障。&lt;/p&gt;
</description>
                <link>http://i.justpic.org/python%20development/2014/07/28/python-optimization</link>
                <guid>http://i.justpic.org/python%20development/2014/07/28/python-optimization</guid>
                <pubDate>2014-07-28T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>data visualization</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://cyrille.rossant.net/scientific-python-in-the-browser-its-coming/&quot;&gt;一篇python数据可视化总结很好的文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://chimera.labs.oreilly.com/books/1230000000345/index.html&quot;&gt;D3 learning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://danielfrg.com/blog/2013/02/05/d3-backbone-tornado-histogram-csv/&quot;&gt;使用tornado D3.js 进行数据可视化&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/07/19/data-visualization</link>
                <guid>http://i.justpic.org/2014/07/19/data-visualization</guid>
                <pubDate>2014-07-19T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>erlang learning</title>
                <description>&lt;p&gt;erlang学习教程
&lt;a href=&quot;http://www.howistart.org/posts/erlang/1&quot;&gt;start erlang&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/07/01/erlang-learning</link>
                <guid>http://i.justpic.org/2014/07/01/erlang-learning</guid>
                <pubDate>2014-07-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>develop tools about python</title>
                <description>&lt;p&gt;工欲善其事，必先利其器。&lt;/p&gt;

&lt;p&gt;vagrant介绍
vagrant是一款用来构建虚拟开发环境的工具，非常适合php/python/ruby/java这类语言开发Web语言，如果说virtualenv是一个python包环境的封装，那么可以说vagrant是在一个操作系统层面上的封装，而且是跨平台的，当然也有docker，关于docker与vagrant的区别可见&lt;a href=&quot;https://www.dockboard.org/docker-vs-vagrant-why-this-two-technologies-aren&#39;t-competing/&quot;&gt;这篇文章&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;安装virtualbox
vagrant依赖虚拟机，可以使用virtualbox和VMware.&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装vagrant
&lt;a href=&quot;http://downloads.vagrantup.com&quot;&gt;下载地址&lt;/a&gt;
下载基础镜像：
&lt;a href=&quot;http://files.vagrantup.com/precise32.box&quot;&gt;ubuntu precise 32&lt;/a&gt;
&lt;a href=&quot;http://files.vagrantup.com/precise64.box&quot;&gt;ubuntu precise 64&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;添加镜像到vagrant&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$vagrant box add boxname pathtobox/precise64.box
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化开发环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cd  devpath
$vagrant init boxname
$vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登陆虚拟机&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$vagrant ssh
$cd /vagrant  #虚拟机下的/vagrant是宿主机上的 devpath
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其他设置
    vagrant出事化后，会在初始化目录里生成一个Vagrantfile的配置文件。
    Vagrant默认是使用端口映射方式将虚拟机的端口映射本机从而实现类似http://localhost:80这种访问方式，host-only模式显得更方便，打开Vagrantfile，将下面这行的注释去掉
config.vm.network :private_network,ip:&amp;ldquo;192.168.33.10&amp;rdquo;
重启虚拟机，这样就能用192.168.33.10访问这台机器。&lt;/p&gt;

&lt;p&gt;打包分发
  $vagrant package
  会生成一个package.box文件，可共分发。&lt;/p&gt;

&lt;p&gt;常用命令&lt;/p&gt;

&lt;p&gt;   $vagrant init
   $vagrant up
   $vagrant halt
   $vagrant reload
   $vagrant ssh
   $vagrant status
   $vagrant destroy&lt;/p&gt;

&lt;p&gt;开发环境中Apache/nginx取消静态文件缓存&lt;/p&gt;

&lt;p&gt;Apache
EnableSendfile off&lt;/p&gt;

&lt;p&gt;Nginx
sendfile off&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/07/01/develop-tools-about-python</link>
                <guid>http://i.justpic.org/2014/07/01/develop-tools-about-python</guid>
                <pubDate>2014-07-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install pypy from source</title>
                <description>&lt;pre&gt;&lt;code&gt;hg clone https://bitbucket.org/pypy/pypy
cd pypy/pypy/goal
python ../../rpython/bin/rpython --opt=jit targetpypystandalone.py

[config opt](http://pypy.readthedocs.org/en/latest/config/opt.html)
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/2014/06/23/install-pypy-from-source</link>
                <guid>http://i.justpic.org/2014/06/23/install-pypy-from-source</guid>
                <pubDate>2014-06-23T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>android emulator note</title>
                <description>&lt;p&gt;&lt;a href=&quot;https://software.intel.com/zh-cn/blogs/2012/03/12/how-to-start-intel-hardware-assisted-virtualization-hypervisor-on-linux-to-speed-up-intel-android-x86-gingerbread-emulator&quot;&gt;intel Hardware-assisted Virtualization Speed Up android&lt;/a&gt;
&lt;a href=&quot;http://blag.felixhummel.de/junk/android_emulator.html&quot;&gt;Android Emulator on Ubuntu 12.04&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/06/14/android-emulator-note</link>
                <guid>http://i.justpic.org/2014/06/14/android-emulator-note</guid>
                <pubDate>2014-06-14T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>vps initialization</title>
                <description>&lt;p&gt;添加用户：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd options &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加用户组：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupadd options &amp;lt;groupname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置权限：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;&amp;lt;username&amp;gt; all=(all:all) all&#39; /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh登陆禁用密码：&lt;/p&gt;

&lt;p&gt;本机：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen  #生成公钥、密钥对

ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote-host    #将公钥复制到远程服务器的authorized_keys中（server端authorized_keys指定公钥，客户端 -i参数指定私钥）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;服务器：&lt;/p&gt;

&lt;p&gt;登陆服务器后，修改/etc/ssh/sshd_config保存&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PasswordAuthentication no    （经用密码登陆）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启ssh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service ssh restart
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/2014/06/06/vps-initialization</link>
                <guid>http://i.justpic.org/2014/06/06/vps-initialization</guid>
                <pubDate>2014-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Python For Finance note</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/06/06/python-for-finance-note</link>
                <guid>http://i.justpic.org/2014/06/06/python-for-finance-note</guid>
                <pubDate>2014-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Finacial Modeling in python note</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/06/06/finacial-modeling-in-python-note</link>
                <guid>http://i.justpic.org/2014/06/06/finacial-modeling-in-python-note</guid>
                <pubDate>2014-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>打开量化投资的黑箱笔记</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/06/06/</link>
                <guid>http://i.justpic.org/2014/06/</guid>
                <pubDate>2014-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>http reversed on ssh</title>
                <description>&lt;p&gt;nginx config details&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;upstream tunnel{
   server 127.0.0.1:8080;
}

server {
   listen 80;
   server_name &amp;lt;url&amp;gt;;

   location /{
   proxy_set_header Host $http_host;
   proxy_pass tunnel;
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh reverse&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -R 8080:localhost:&amp;lt;port&amp;gt; &amp;lt;user_name&amp;gt;@&amp;lt;server&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;port is your local application used&lt;/p&gt;

&lt;p&gt;url is the url you will to visit public&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ripples.so/&quot;&gt;ripples.so&lt;/a&gt;
is a localtunnel site that can expose your local website.&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/06/05/http-reversed-on-ssh</link>
                <guid>http://i.justpic.org/2014/06/05/http-reversed-on-ssh</guid>
                <pubDate>2014-06-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Java call matlab</title>
                <description>&lt;p&gt;与C++/C调用matlab不同的是，C++是&lt;a href=&quot;http://blog.segmentfault.com/simbest/1190000000417000&quot;&gt;调用matlab的生成动态库&lt;/a&gt;或者使用matlab引擎，而java是调用matlab代码打包成的jar包。&lt;/p&gt;

&lt;p&gt;使用deploytool命令打开matlab打包工具
打包完成后在eclipse除导入该包外，还要导入目录 toolbox/javabuilder/jar/javabuilder.jar包
在相关代码中完成导入语句和定义完成java调用matlab代码的调用。
具体相关代码和事例可见&lt;a href=&quot;https://github.com/matrixorz/writer_identification/blob/master/Writer/writerui/writer.java&quot;&gt;example&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/06/02/java-call-matlab</link>
                <guid>http://i.justpic.org/2014/06/02/java-call-matlab</guid>
                <pubDate>2014-06-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>deploy sites on nginx</title>
                <description>&lt;p&gt;Then it means nginx or some other process is already using port 80.&lt;/p&gt;

&lt;p&gt;You can kill it using:&lt;/p&gt;

&lt;p&gt;sudo fuser -k 80/tcp&lt;/p&gt;

&lt;p&gt;And then try restarting nginx again:&lt;/p&gt;

&lt;p&gt;service nginx start&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/05/22/deploy-sites-on-nginx</link>
                <guid>http://i.justpic.org/2014/05/22/deploy-sites-on-nginx</guid>
                <pubDate>2014-05-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Matlab C混合编程</title>
                <description>

&lt;p&gt;用C++（或者C）语言操作MATLAB，有三种途径：&lt;br&gt;
·MEX文件&lt;br&gt;
在MATLAB中可调用的C或Fortran语言程序称为MEX文件。MATLAB可以直接把MEX文件视为它的内建函数进行调用。MEX文件是动态链接的子例程，MATLAB解释器可以自动载入并执行它。MEX文件主要有以下用途：&lt;br&gt;
对于大量现有的C或者Fortran程序可以无须改写成MATLAB专用的M文件格式而在MATLAB中执行。&lt;br&gt;
对于那些MATLAB运算速度过慢的算法，可以用C或者Frotran语言编写以提高效率。&lt;br&gt;
·MAT文件应用程序&lt;br&gt;
MAT文件是MATLAB专用的用于保存数据至磁盘和向MATLAB导入、从MATLAB导出数据的数据文件格式。MAT文件提供了一种简便的机制，它允许你在两个平台之间以灵活的方式移动数据。而且，它还提供了一种途径来向其它单机MATLAB应用导入或者导出数据。&lt;br&gt;
为了简化在MATLAB环境之外对MAT文件的使用，MATLAB给出了一个操作例程库，通过它，我们可以使用C/C++或者Fortran程序读写MAT文件。&lt;br&gt;
·引擎应用程序&lt;br&gt;
MATLAB提供了一系列的例程使得别的程序可以调用MATLAB，从而把MATLAB用作一个计算引擎。MATLAB引擎程序指的是那些通过管道（在UNIX系统中）或者ActiveX（在Windows系统中）与独立MATLAB进程进行通信的C/C++或者Fortran程序。&lt;/p&gt;


&lt;p&gt;MEX文件&lt;/p&gt;


&lt;p&gt;#include “mex.h”&lt;/p&gt;


&lt;p&gt;/*&lt;br&gt;
*timestwo.c-example found in API guide&lt;br&gt;
*&lt;br&gt;
*Computational function that takes a scalar and doubles it&lt;br&gt;
*&lt;br&gt;
*This is a MEX-File for MATLAB.&lt;br&gt;
*Copyright(c)&lt;br&gt;
*/&lt;br&gt;
void timestwo(double y[],double x[]);&lt;br&gt;
void timestwo(double y[],double x[])&lt;br&gt;
{&lt;br&gt;
y[0]=2.0*x[0];&lt;br&gt;
}&lt;br&gt;
void mexFunction(int nlhs,mxArray* plhs[],&lt;br&gt;
int nrhs,const mxArray *prhs[])&lt;br&gt;
/*nlhs是MATLAB命令行方式下输出参数的个数&lt;br&gt;
*plhs是MATLAB命令行方式下的输出参数;&lt;br&gt;
*nrhs是MATLAB命令行方式下输入参数的个数；&lt;br&gt;
*prhs[]是MATLAB命令行方式下的输入参数；&lt;br&gt;
*/&lt;br&gt;
{&lt;br&gt;
double *x,*y;&lt;br&gt;
int mrows,ncols;&lt;br&gt;
/*Check for proper number of arguments.*/&lt;br&gt;
if (nrhs!=1){&lt;br&gt;
mexErrMsgTxt(“One input required”);&lt;br&gt;
}&lt;br&gt;
else if(nlhs&amp;gt;1)&lt;br&gt;
{&lt;br&gt;
mexErrMsgTxt(“Too many output arguments”);&lt;br&gt;
}&lt;br&gt;
/*在MATLAB命令行方式下，本MEX文件的调用格式是y=timestwo(x)&lt;br&gt;
输入参数（x）个数=1，输出参数（y）个数=1，所以在程序一开始就检查&lt;br&gt;
nrhs时候==1以及nlhs是否&amp;gt;1（因为MATLAB有一个缺省的输出参数ans，所以nlhs可以==0*/&lt;br&gt;
/*The input must be a non comlex scalar double.*/&lt;br&gt;
mrows=mxGetM(prhs[0]);//矩阵行数&lt;br&gt;
ncols=mxGetN(prhs[0]);//矩阵列数&lt;br&gt;
if (!mxIsDouble(prhs[0])|| mxIsComplex(prhs[0])||!(mrows==1&amp;amp;ncols==1))&lt;br&gt;
{&lt;br&gt;
mexErrMsgTxt(“Input must be a noncomplex scalar double”);&lt;br&gt;
}&lt;br&gt;
//判断输入举证是否是double类，以及它是否只包含单个元素无嵌套&lt;br&gt;
//为输出创建一个矩阵，显然这个矩阵也应该是1*1的&lt;br&gt;
plhs[0]=mxCreateDoubleMatrix(mrows,ncols,mxREAL);&lt;br&gt;
x=mxGetPr(prhs[0]);&lt;br&gt;
y=mxGetPr(plhs[0]);&lt;br&gt;
timestwo(y,x);&lt;br&gt;
}&lt;/p&gt;


&lt;p&gt;matlab&amp;gt;mex testmex.cpp&lt;/p&gt;


&lt;p&gt;matlab&amp;gt;x=2&lt;/p&gt;


&lt;p&gt;matlab&amp;gt;y=testmex(x)&lt;/p&gt;


&lt;p&gt;2.MAT文件：&lt;/p&gt;


&lt;p&gt;libmat.dll:用于操作mat文件&lt;/p&gt;


&lt;p&gt;libmx.dll:用于操作mat文件中的矩阵&lt;/p&gt;


&lt;p&gt;MATLAB中常用的矩阵类型：&lt;/p&gt;


&lt;p&gt;（复）双精度矩阵：&lt;/p&gt;


&lt;p&gt;MATLAB中最常用的数据类型便是（复）双精度、非稀疏矩阵，这些矩阵的元素都是双精度（double）的，矩阵的尺寸为m×n，其中m是总行数，m是总列数。矩阵数据实际存放在两个双精度向量中——一个向量存放的是数据的实部，另一个向量存放的是数据的虚部。指向这两个向量的指针一般被写做“pr” （pointer to real data，指向实数据的指针）和“pi” （pointer to imaginary data，指向虚数据的指针）”。如果一个矩阵的pi为空的话，说明它是实双精度矩阵。&lt;/p&gt;


&lt;p&gt;稀疏矩阵（Sparse Matrices）&lt;br&gt;
MATLAB中稀疏矩阵的存储格式与众不同。如同双精度矩阵一样，它拥有参数pr和pi，同时它还具用三个附加的参数：nzmax，ir以及jc。&lt;br&gt;
nzmax是个整型数，其值为向量ir及pr、pi（如果存在的话）可能的最大长度。它是稀疏矩阵中不为零的元素的个数。&lt;br&gt;
ir指向一个长度为nzmax的整型数阵列，阵列包含的是pr和pi中对应元素的行号。&lt;br&gt;
jc指向一个长度为N+1的整型数阵列（N为矩阵的列数），其中包含的是列号信息。对于任意的j，如果0≤j≥N-1，jc[j]是第j列中第一个非零项在ir、pr（以及pi）中的序号，jc[j+1]-1是第j列最后一个非零项的序号。因此jc[N]总等于nnz——矩阵中非零项的总个数。如果nnz小于nzmax，可以继续向矩阵中添加非零项而无需分配额外的存储空间&lt;/p&gt;


&lt;p&gt;4、主要函数举例：&lt;br&gt;
·MATFile *matOpen(const char *filename, const char * mode)——打开/创建&lt;br&gt;
·MATFile *matOpen(const char *filename, const char * mode)——打开/创建一个MAT文件；&lt;br&gt;
·int matClose(MATFile *pMF)——关闭一个MAT文件；&lt;br&gt;
·mxArray *mxCreateDoubleMatrix(int m, int n, mxComplexity flag)&lt;br&gt;
——创建一个（复）双精度矩阵；&lt;br&gt;
·mxArray *mxCreateSparse(int m, int n, int nzmax, mxComplexity flag)&lt;br&gt;
——创建一个稀疏矩阵；&lt;br&gt;
·mxArray *matGetNextArray(MATFile *pMF)——获得MAT文件里面下一个矩阵；&lt;br&gt;
·const char *mxGetName(const mxArray *pa)——获得矩阵pa的名称；&lt;br&gt;
·void mxSetName(mxArray *pa,const char *s)——为矩阵pa设置一个名称；&lt;br&gt;
·int mxGetM(const mxArray *pa)——获得矩阵pa的总行数；&lt;br&gt;
·int mxGetN(const mxArray *pa)——获得矩阵pa的总列数；&lt;br&gt;
·double *mxGetPr(const mxArray *pa)——获得矩阵pa的pr指针；&lt;br&gt;
·int *mxGetIr(const mxArray *pa)——获得稀疏矩阵pa的ir指针；&lt;br&gt;
·int *mxGetJc(const mxArray *pa)——获得稀疏矩阵pa的jc指针；&lt;br&gt;
·int matPutArray(MATFile * pMF, const mxArray * pA)&lt;br&gt;
——把矩阵pA存储入MAT文件pMAF；&lt;br&gt;
·void mxDestroyArray(mxArray *pa)——释放矩阵pa（把它从内存中撤销）；&lt;/p&gt;


&lt;p&gt;&amp;nbsp;&lt;/p&gt;


&lt;p&gt;&amp;nbsp;&lt;/p&gt;



</description>
                <link>http://i.justpic.org/2014/05/06/matlab-c</link>
                <guid>http://i.justpic.org/2014/05/06/matlab-c</guid>
                <pubDate>2014-05-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>小波学习1</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/04/28/1</link>
                <guid>http://i.justpic.org/2014/04/28/1</guid>
                <pubDate>2014-04-28T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>计量经济学概要</title>
                <description>&lt;p&gt;简单线性回归模型I的假设
对于各个x值，&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/28/</link>
                <guid>http://i.justpic.org/2014/04/</guid>
                <pubDate>2014-04-28T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>tornado with i18n</title>
                <description>&lt;p&gt;i18n是国际化的简称（Internationalization,去掉开始的I和最后的N，中间一共18个字符）。
tornado中使用i18n需要下面两个工具
两个工具:pygettext,msgfmt，两个相关文件:po文件和mo文件&lt;/p&gt;

&lt;p&gt;pygetext和msgfmt的使用方法：&lt;/p&gt;

&lt;p&gt;编写python代码文件 test.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from gettext import gettext as _
print _(&quot;well down&quot;)
print _(&quot;good&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pygetext test.py&lt;/p&gt;

&lt;p&gt;生成messages.pot文件,更改文件后缀
mv messages.pot messages.po
配置msgstr值&lt;/p&gt;

&lt;p&gt;生成一个名为messages.mo文件：
msgfmt messages.po&lt;/p&gt;

&lt;p&gt;建立目录locale/cn/LC_MESSAGES/&lt;/p&gt;

&lt;p&gt;mv messages.po locale/cn/LC_MESSAGES&lt;/p&gt;

&lt;p&gt;cn目录是所对应的语言，LC_MESSAGES是gettext.py文件里要求的
mo文件必须和所定义的域同名
gettext.py中有
modfile=os.path.join(localedir,lang,&amp;lsquo;LC_MESSAGES&amp;rsquo;,&amp;lsquo;%s.mo&amp;rsquo; %domain)&lt;/p&gt;

&lt;p&gt;测试：
    $python
    &gt;&gt;&gt;gettext.install(&amp;lsquo;messages&amp;rsquo;,&amp;lsquo;./locale&amp;rsquo;,unicode=True)
三个参数：
作用域名，用于限定翻译文件的主名
路径，存放翻译文件的路径
unicode，是否使用unicode（如果应用程序是unicode的，此处应设为True)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;gettext.translation(&#39;messages&#39;,&#39;./locale&#39;,languages=[&#39;cn&#39;]).install(True)
&amp;gt;&amp;gt;&amp;gt;print _(&quot;good&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在tornado中使用时:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$xgettext -L python -k=_ -o openquant.po $(find . -name \*.py) $(find template/ -name \*.html)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查找所有需要翻译的相关项生成 po 文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$msgfmt openquant.po -o locale/zh_CN/LC_MESSAGES/openquant.mo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成mo文件&lt;/p&gt;

&lt;p&gt;完成相关文件的生成后，需要在代码中加载:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tornado.locale.load_gettext_translations(options.I18N_PATH,&quot;openquant&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;handler中自定义get_user_locale函数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def get_user_locale(self):
    #zh_CN or en_US
    user_locale = self.get_cookie(&quot;user_locale&quot;)

    if user_locale:
        return tornado.locale.get(user_locale)

    return None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考文章:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ylinux.org/imind/167&quot;&gt;iMind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://justbm.blogspot.com/2014/01/django.html&quot;&gt;django多国语言&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/27/tornado-with-i18n</link>
                <guid>http://i.justpic.org/2014/04/27/tornado-with-i18n</guid>
                <pubDate>2014-04-27T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>algorithm learning</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://courses.csail.mit.edu/6.581/spring12/lectures/&quot;&gt;advanced data structure&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/24/algorithm-learning</link>
                <guid>http://i.justpic.org/2014/04/24/algorithm-learning</guid>
                <pubDate>2014-04-24T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install multi version JDK on ubuntu</title>
                <description>&lt;p&gt;三条命令搞定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get install oracle-java8-installer
$sudo apt-get install oracle-java7-installer
$sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/2014/04/19/install-multi-version-jdk-on-ubuntu</link>
                <guid>http://i.justpic.org/2014/04/19/install-multi-version-jdk-on-ubuntu</guid>
                <pubDate>2014-04-19T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>阿里数据挖掘2014比赛解题报告</title>
                <description>
</description>
                <link>http://i.justpic.org/2014/04/16/2014</link>
                <guid>http://i.justpic.org/2014/04/16/2014</guid>
                <pubDate>2014-04-16T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>open toolchain on ubuntu 12.04</title>
                <description>&lt;p&gt;在ubuntu 12.04上先安装gcc-4.8，然后安装llvm,clang,libcxx,libcxxabi.由于libcxx和libcxxabi相互依赖，需要两次安装libcxx。最后安装theos等开放的ios开发工具链&lt;/p&gt;

&lt;p&gt;安装gcc-4.8如前文所述&lt;a href=&quot;/2014/04/02/gcc-48-on-ubuntu/&quot;&gt;install gcc4.8 on ubuntu 12.04&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;安装llvm,clang&lt;/h2&gt;

&lt;p&gt;/etc/apt/sources.list中添加如下两行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main
deb-src http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检索签名：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装与llvm-3.4,clang-3.4相关的所有包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install clang-3.4 clang-3.4-doc libclang-common-3.4-dev libclang-3.4-dev libclang1-3.4 libclang1-3.4-dbg libllvm-3.4-ocaml-dev libllvm3.4 libllvm3.4-dbg lldb-3.4 llvm-3.4 llvm-3.4-dev llvm-3.4-doc llvm-3.4-examples llvm-3.4-runtime clang-modernize-3.4 clang-format-3.4 python-clang-3.4 lldb-3.4-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装libcxx：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看g++使用的头文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo | g++ -Wp,-v -x c++ - -fsyntax-only
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将会输出类似如下结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ignoring nonexistent directory &quot;/usr/local/include/x86_64-linux-gnu&quot;
ignoring nonexistent directory &quot;/usr/lib/gcc/x86_64-linux- gnu/4.8/../../../../x86_64-linux-gnu/include&quot;
### #include &quot;...&quot; search starts here:
### include &amp;lt;...&amp;gt; search starts here:
/usr/include/c++/4.8
/usr/include/c++/4.8/x86_64-linux-gnu
/usr/include/c++/4.8/backward
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
/usr/local/include
/usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed
/usr/include/x86_64-linux-gnu
/usr/include
End of search list.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译安装libcxx：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CC=clang CXX=clang++ cmake -G &quot;Unix Makefiles&quot; -DLIBCXX_CXX_ABI=libsupc++ - DLIBCXX_LIBSUPCXX_INCLUDE_PATHS=&quot;/usr/include/c++/4.7/;/usr/include/x86_64-linux- gnu/c++/4.7/&quot; -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr &amp;lt;libc++-source-dir&amp;gt;
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装libcxxabi&lt;/p&gt;

&lt;p&gt;首先安装相关依赖：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install g++ subversion cmake swig python-dev libedit-dev libunwind8 libunwind8-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载源码并编译：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi
cd libcxxabi/lib
./buildit
sudo cp libc++abi.so.1.0 /usr/lib
sudo ln -s /usr/lib/libc++abi.so.1.0 /usr/lib/libc++abi.so.1
sudo ln -s /usr/lib/libc++abi.so.1 /usr/lib/libc++abi.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用libc++abi来安装libc++&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx
cd libcxx
mkdir build
cd build
CC=clang CXX=clang++ cmake -G &quot;Unix Makefiles&quot; -DLIBCXX_CXX_ABI=libcxxabi -  DLIBCXX_LIBCXXABI_INCLUDE_PATHS=&quot;&amp;lt;libc++abi-source-dir&amp;gt;/include&quot; -  DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr ../
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此ubuntu 12.04上的LLVM环境就算搭建好了。&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/12/open-toolchain-on-ubuntu-1204</link>
                <guid>http://i.justpic.org/2014/04/12/open-toolchain-on-ubuntu-1204</guid>
                <pubDate>2014-04-12T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>mysql使用总结</title>
                <description>&lt;h2&gt;Mysql导入导出&lt;/h2&gt;

&lt;p&gt;导出所有库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump -uusername -ppassword --all-databases&amp;gt;all.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入所有库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt;source all.sql;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导出某些库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump -uusername -ppassword --databases db1 db2 &amp;gt;db1db2.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入某些库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt;source db1db2.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入某个库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -uusername -ppassword db1&amp;lt;db1.sql;
mysql&amp;gt;source db1.sql;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导出某个库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump -uusername -ppassword db1 table1 table2&amp;gt;tb1tb2.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入某些数据表&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -uusername -ppassword db1&amp;lt;tb1tb2.sql
mysql&amp;gt;user db1;
mysql&amp;gt;source tb1tb2.sql;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysqldump字符集设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$mysqldump -uusername -ppassword --default-character-set=utf-8 db1 table1&amp;gt;tb1.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Mysql用户管理&lt;/h2&gt;

&lt;p&gt;创建用户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; insert into mysql.user(Host,User,Password) values(&quot;localhost&quot;,&quot;phplamp&quot;,password(&quot;1234&quot;));
mysql&amp;gt;grant all privileges on *.* to jee@localhost identified by ‘123′；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改用户密码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; UPDATE mysql.user SET password=PASSWORD(’新密码’) WHERE User=’root’;
mysql&amp;gt; FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示当前用户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt;select USER();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mysql 主从复制&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/04/mysqldump-summary</link>
                <guid>http://i.justpic.org/2014/04/04/mysqldump-summary</guid>
                <pubDate>2014-04-04T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>gcc 4.8 on ubuntu</title>
                <description>&lt;pre&gt;&lt;code&gt; sudo apt-get install python-software-properties
 sudo add-apt-repository ppa:boost-latest/ppa
 sudo apt-get update
 sudo apt-get install libboost1.55-all-dev
 sudo add-apt-repository ppa:ubuntu-toolchain-r/test
 sudo apt-get update
 sudo apt-get install gcc-4.8 g++-4.8
 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.6 
 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8
 sudo update-alternatives --config gcc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 安装完gcc-4.8后即可安装llvm-3.4 参考 &lt;a href=&quot;&quot;&gt;llvm/apt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 下载&lt;a href=&quot;&quot;&gt;osxcross&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 编译出现错误： fatal error:limits can&amp;rsquo;t find?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $echo &#39;#include &amp;lt;limits.h&amp;gt;&#39; | clang -v -xc -o /dev/null -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用上述命令排错，依依对照toolchain查找的include顺序，修改include链接，即可解决问题
其实这是一个llvm的bug
临时解决方案&lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/llvm-defaults/+bug/1242300&quot;&gt;参考&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cd /usr/lib/clang/&amp;lt;clang-version/
$sudo ln -sf ../../llvm-3.4/lib/clang/&amp;lt;clang-version&amp;gt;/include include
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次编译可以通过。
一个查找文件的有用命令:
    $grep notification &lt;code&gt;find ./*&lt;/code&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/02/gcc-48-on-ubuntu</link>
                <guid>http://i.justpic.org/2014/04/02/gcc-48-on-ubuntu</guid>
                <pubDate>2014-04-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install windows/linux with usb</title>
                <description>&lt;p&gt;&lt;a href=&quot;https://github.com/pbatard/rufus/&quot;&gt;rufus&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://www.owasp.org/images/d/dc/AppsecEU09-Damele-A-G-Advanced-SQL-injection-slides.pdf&quot;&gt;sql injection&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/04/01/install-windowslinux-with-usb</link>
                <guid>http://i.justpic.org/2014/04/01/install-windowslinux-with-usb</guid>
                <pubDate>2014-04-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>text analysis</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.etcml.com/&quot;&gt;etcml&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2014/02/07/text-analysis</link>
                <guid>http://i.justpic.org/2014/02/07/text-analysis</guid>
                <pubDate>2014-02-07T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install redmine in ubuntu</title>
                <description>&lt;p&gt;安装redmine出现权限问题的解决方法 &lt;br/&gt;
&lt;a href=&quot;http://redminecrm.com/boards/4/topics/448-installing-redmine-2-2-passenger-nginx-rvm-on-ubuntu-12-04&quot;&gt;install redmine on ubuntu12.04&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    chmod 777 &lt;span class=&quot;c&quot;&gt;#命令 来解决权限问题 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</description>
                <link>http://i.justpic.org/2013/12/04/install-redmine-in-ubuntu</link>
                <guid>http://i.justpic.org/2013/12/04/install-redmine-in-ubuntu</guid>
                <pubDate>2013-12-04T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install World Community Grid on a headless Ubuntu Server</title>
                <description>&lt;h1&gt;在ubuntu上安装BOINC&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get aptitude install boinc-client
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(you can also download it from wcg and install)&lt;/p&gt;

&lt;p&gt;find your account key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boinccmd --lookup_account http://www.worldcommunitygrid.org username password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should get a response something like this
dfb74c9b9&amp;hellip;&lt;/p&gt;

&lt;p&gt;attach to your project&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boinccmd --project_attach http://www.worldcommunitygrid.org dfb74c....
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if you want to verify your attached enter the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boinccmd --get_state
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Futher resources:&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/installing_BOINC_ON_Ubuntu&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/Client_configuration&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/Stop_or_start_BOINC daemon_after_boot&lt;/p&gt;

&lt;p&gt;references:&lt;/p&gt;

&lt;p&gt;blog.joelchristian.com/?p=291&lt;/p&gt;

&lt;p&gt;misctechmusings.com/linux/boinc-cli-for-world-community-grid/&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/19/install-world-community-grid-on-a-headless-ubuntu-server</link>
                <guid>http://i.justpic.org/2013/11/19/install-world-community-grid-on-a-headless-ubuntu-server</guid>
                <pubDate>2013-11-19T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>a little surprised</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.jstatsoft.org/v27&quot;&gt;yihui&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cos.name/2013/02/rise-of-the-machine/&quot;&gt;cos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.niemanlab.org/2013/11/matt-waite-how-i-faced-my-fears-and-learned-to-be-good-at-math/&quot;&gt;conquer math&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/10/a-little-surprised</link>
                <guid>http://i.justpic.org/2013/11/10/a-little-surprised</guid>
                <pubDate>2013-11-10T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>data analysis</title>
                <description>&lt;p&gt;http://www.datagenetics.com/&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/09/data-analysis</link>
                <guid>http://i.justpic.org/2013/11/09/data-analysis</guid>
                <pubDate>2013-11-09T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>understand WSGI</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.myexception.cn/perl-python/1351788.html&quot;&gt;web.py源码解析&lt;/a&gt;
&lt;a href=&quot;http://ivory.idyll.org/articles/wsgi-intro/what-is-wsgi.html&quot;&gt;WSGI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;web server side:&lt;/p&gt;

&lt;p&gt;服务器必须做两件事情：&lt;/p&gt;

&lt;p&gt;一个environ字典和一个start_response函数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iterable=app(environ,start_response)
for data in iterable:
    #send data to client
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WSGI中分块传输大文件，使用yield：（rhodesmill.org/brandon/2013/chunked-wsgi）&lt;/p&gt;

&lt;p&gt;后续：&lt;/p&gt;

&lt;p&gt;http://benosteen.wordpress.com&lt;/p&gt;

&lt;p&gt;My swiss army toolkit for distributed/multiproesssing systems&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/06/python-web</link>
                <guid>http://i.justpic.org/2013/11/06/python-web</guid>
                <pubDate>2013-11-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>leaning python site</title>
                <description>&lt;h1&gt;Learning Python Sites&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;basic(初级)&lt;/strong&gt;
&lt;a href=&quot;docs.python-guide.org/en/latest&quot;&gt;Hitchhiker&amp;rsquo;s Guide to Python&lt;/a&gt;
&lt;a href=&quot;http://woodpecker.org.cn/abyteofpython_cn/chinese/&quot;&gt;A byte of Python(中文的)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codecademy.com/zh/tracks/python&quot;&gt;codecademy课程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://inventwithpython.com/chapters/&quot;&gt;invent with python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;medium(中级)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gregmalcolm/python_koans&quot;&gt;通过改错学习python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;advanced(高级)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2014/04/pyston&quot;&gt;python与llvm结合&lt;/a&gt;   &lt;a href=&quot;http://github.com/dropbox/pyston&quot;&gt;pyston&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://anandology.com/python-practice-book&quot;&gt;python practice book&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kevinsheppard.com/images/0/09/Python_introduction.pdf&quot;&gt;python作统计分析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tuiku.com&quot;&gt;tuiku&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;online game:
&lt;a href=&quot;http://www.checkio.org&quot;&gt;Game&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/05/leaning-python-site</link>
                <guid>http://i.justpic.org/2013/11/05/leaning-python-site</guid>
                <pubDate>2013-11-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>deploy python on nginx</title>
                <description>&lt;p&gt;&lt;a href=&quot;serholiu.com/tornado-nginx-supervisord&quot;&gt;tornado with nginx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/&quot;&gt;gunicorn with nginx&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/11/04/deploy-python-on-nginx</link>
                <guid>http://i.justpic.org/2013/11/04/deploy-python-on-nginx</guid>
                <pubDate>2013-11-04T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install project on preferati</title>
                <description>&lt;p&gt;Install OpenQuant Project&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install nginx
sudo apt-get install git
sudo apt-get install mysql-server
sudo apt-get install python-dev

install easy_install on ubuntu:
sudo apt-get install python-setuptools
sudo easy_install virtualenv
sudo easy_install pip
virtualenv ~/trade
source ~/trade/bin/activate
install numpy scipy pandas and ta-lib
sudo pip install Cython
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;due to blas libs&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install gfortran libopenblas-dev liblapack-dev g++
pip install numpy
pip install scipy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;install ta-lib&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~
wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
sudo apt-get  install  build-essential
tar -zxvf ta-lib-0.4.0-src.tar.gz
cd ta-lib-0.4.0
./configure --prefix=/usr
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;install gevent&lt;/strong&gt;
    wget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz
    tar -zxvf
    ./configure
    make
    sudo make install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/www
git clone https://github.com/pydata/pandas.git
git clone https://github.com/mrjbq7/ta-lib.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;update the nginx&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties
sudo apt-get install sotware-properties-common
sudo add-apt-repository ppa:nginx/stable
sudo apt-get update
sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;mysql init&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-server libmysqld-dev
pip install MySQL-python
insert into mysql.user(Host,User,Password) values(&quot;localhost&quot;,&quot;david&quot;,password(&quot;david&quot;));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;用户授权&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;给本地用户mql分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123456。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt;grant all privileges on *.* to david@localhost identified by &#39;david&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;install redis&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://rubyer.me/blog/638/ redis.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;uwsgi or gunicorn(optional)&lt;/strong&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/10/27/install-project-on-preferati</link>
                <guid>http://i.justpic.org/2013/10/27/install-project-on-preferati</guid>
                <pubDate>2013-10-27T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>how to write a crawler</title>
                <description>&lt;p&gt;http://www.emanueleminotto.it/how-to-write-a-crawler&lt;/p&gt;

&lt;p&gt;http://benosteen.wordpress.com/2010/02/11/my-swiss-army-toolkit-for-distributedmultiprocessing-systems/&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/10/26/how-to-write-a-crawler</link>
                <guid>http://i.justpic.org/2013/10/26/how-to-write-a-crawler</guid>
                <pubDate>2013-10-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>qt fourteen steps</title>
                <description>&lt;p&gt;1.Hello ,World!&lt;/p&gt;

&lt;p&gt;2.调用退出
3.家庭价值
4.使用窗口部件
5.组装积木
6.组装丰富的积木！
7.一个事物领导另一个
8.准备战斗
9.你可以使用加农炮了
10.像丝一样滑
11.给它一个炮弹
12.悬在空中的砖
13.游戏结束
14.面对墙壁&lt;/p&gt;

&lt;p&gt;同普通的 C++ 成员函数一样，槽函数也分为三种类型，即 public slots、private slots 和 protected slots。
public slots：在这个区内声明的槽意味着任何对象都可将信号与之相连接。这对于组件编程非常有用，你可以创建彼此互不了解的对象，将它们的信号与槽进行连接以便信息能够正确的传递。
protected slots：在这个区内声明的槽意味着当前类及其子类可以将信号与之相连接。这适用于那些槽，它们是类实现的一部分，但是其界面接口却面向外部。
private slots：在这个区内声明的槽意味着只有类自己可以将信号与之相连接。这适用于联系非常紧密的类。&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/10/22/qt-fourteen-steps</link>
                <guid>http://i.justpic.org/2013/10/22/qt-fourteen-steps</guid>
                <pubDate>2013-10-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install numpy scipy on ubuntu</title>
                <description>&lt;h1&gt;linux上安装numpy scipy&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo pip install numpy
sudo apt-get install libatlas-base-dev gfortran
sudo pip install scipy
sudo pip install matplotlib   # recommended
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Line 2 was necessary for SciPy, otherwise it was complaining that BLAS and a Fortran compiler were missing. Note that gfortran replaces the package g77.&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/10/18/install-numpy-scipy-on-ubuntu</link>
                <guid>http://i.justpic.org/2013/10/18/install-numpy-scipy-on-ubuntu</guid>
                <pubDate>2013-10-18T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python machine learning</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.xavierdupre.fr/blog/2013-09-15_nojs.html&quot;&gt;python machine learning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yuanyong.org/blog/python/k-means-using-python&quot;&gt;k-means&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jmlr.org/mloss/&quot;&gt;JMLR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mloss.org/software/&quot;&gt;machine learning open source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;中文资料&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zouxy09/article/details/8775524&quot;&gt;深度学习笔记&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ufldl.stanford.edu/wiki/index.php/UFLDL%E6%95%99%E7%A8%8B&quot;&gt;UFLDL教程&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/10/17/python-machine-learning</link>
                <guid>http://i.justpic.org/2013/10/17/python-machine-learning</guid>
                <pubDate>2013-10-17T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>git</title>
                <description>&lt;h1&gt;git学习资料&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/jbenet/ee6c9ac48068889b0912&quot;&gt;a gist for git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gitref.cyj.me/zh/remotes/&quot;&gt;git&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/09/29/git</link>
                <guid>http://i.justpic.org/2013/09/29/git</guid>
                <pubDate>2013-09-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>nginx permission root</title>
                <description>&lt;h1&gt;nginx 权限问题的解决方法&lt;/h1&gt;

&lt;p&gt;按照下面方法配置nginx时出现用户权限问题
    server{
    listen 4002;
    server_name localhost;
    access_log logs/access.log;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location / {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Host $http_host;
   proxy_set_header X-NginxX-Proxy true;

   proxy_pass http://backend;
   proxy_redirect off;

   proxy_http_version 1.1;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection &quot;upgrade&quot;;
   }
   }
 upstream backend {
 server 127.0.0.1:3201;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参照&lt;a href=&quot;http://serverfault.com/questions/246609/trouble-with-nginx-and-serving-from-multiple-directories-under-the-same-domain&quot;&gt;nginx 13:permission denied solved&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The root directive is the problem here. Quote from the doc:&lt;/p&gt;

&lt;p&gt;note: Keep in mind that the root will still append the directory to the request so that a request for &amp;ldquo;/i/top.gif&amp;rdquo; will not look in &amp;ldquo;/spool/w3/top.gif&amp;rdquo; like might happen in an Apache-like alias configuration where the location match itself is dropped. Use the alias directive to achieve the Apache-like functionality.&lt;/p&gt;

&lt;p&gt;Basically, only use root for real roots: if the content is to be at / use root. If it&amp;rsquo;s going to end on a subfolder, use alias:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location  /map/ {
  alias  /home/user/public_html/map/;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also check what user nginx is running as and make sure that this user can access /home/user/public_html/map&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/09/18/nginx-permission-root</link>
                <guid>http://i.justpic.org/2013/09/18/nginx-permission-root</guid>
                <pubDate>2013-09-18T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>asynchrous,synchrous,blocking,unblocking network</title>
                <description>&lt;p&gt;Linux下的五种I/O模型
阻塞I/O（blocking I/O）
非阻塞I/O（nonblocking I/O）&lt;br/&gt;
I/O服用（select和poll）（I/O multiplexing）
信号驱动I/O（signal driven I/O（SIGIO））
异步I/O（asynchronous I/O（the POSIX aio_functions))
前四种都是同步，只用最后一种是异步I/O&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/09/12/asynchroussynchrousblockingunblocking-network</link>
                <guid>http://i.justpic.org/2013/09/12/asynchroussynchrousblockingunblocking-network</guid>
                <pubDate>2013-09-12T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>machine learning in action</title>
                <description>&lt;p&gt;https://github.com/pbharrin/machinelearninginaction
zhan.renren.com/quantitativefinance?checked=true&lt;/p&gt;
</description>
                <link>http://i.justpic.org/machine%20learning/2013/08/08/machine-learning-in-action</link>
                <guid>http://i.justpic.org/machine%20learning/2013/08/08/machine-learning-in-action</guid>
                <pubDate>2013-08-08T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>webpy</title>
                <description>&lt;h1&gt;webpy 中文文档学习目录&lt;/h1&gt;

&lt;h2&gt;web py&lt;/h2&gt;

&lt;p&gt; &lt;a href=&quot;&quot;&gt;安装 webpy&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;webpy3.0 新手指南&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;webpy CookBook&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;webpy基本应用:&lt;/h2&gt;

&lt;p&gt; &lt;a href=&quot;&quot;&gt;Hello World&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;提供静态文件访问&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;理解URL控制&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;跳转与重定向&lt;/a&gt;
 &lt;a href=&quot;&quot;&gt;使用子应用&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;提供XML访问&lt;/a&gt;&lt;br/&gt;
 &lt;a href=&quot;&quot;&gt;从post读取原始数据&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;高级应用:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;用web.ctx获得客户端信息&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;应用处理器，添加钩子和卸载钩子&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何使用web.background&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;自定义NotFound信息&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何流传输大文件&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;对自带的webserver日志进行操作&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;用cherrypy提供SSL支持&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;实时语言切换&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Sessions and user state 会话和用户状态:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;如何使用Session&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何在调试模式下使用Session&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;在template中使用session&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何操作Cookie&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;用户认证&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;一个在postgreSQL数据库环境下的用户认证的例子&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何在子应用中操作Session&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Utils 实用工具&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;如何发送邮件&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何利用Gmail发送邮件&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;使用soaplib实现webservice&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Templates 模板&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Templetor: web.py 模板系统&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;使用站点布局模板&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;交替式风格 (未译)&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;导入函数到模板中 (未译)&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;模板文件中的i18n支持&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;在web.py中使用Mako模板引擎&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;在web.py中使用Cheetah模板引擎&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;在web.py中使用Jinja2模板引擎&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;如何在谷歌应用程序引擎使用模板&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Testing 测试:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Testing with Paste and Nose (未译)&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;&quot;&gt;RESTful doctesting using an application&amp;rsquo;s request method (未译)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;User input 用户输入:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;文件上传&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;保存上传的文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;上传文件大小限定&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;通过 web.input 接受用户输入&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;怎样使用表单&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;显示个别表单字段&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Database 数据库&lt;/h2&gt;

&lt;p&gt;使用多数据库&lt;/p&gt;

&lt;p&gt;Select: 查询数据&lt;/p&gt;

&lt;p&gt;Update: 更新数据&lt;/p&gt;

&lt;p&gt;Delete: 删除数据&lt;/p&gt;

&lt;p&gt;Insert: 新增数据&lt;/p&gt;

&lt;p&gt;Query: 高级数据库查询&lt;/p&gt;

&lt;p&gt;怎样使用数据库事务&lt;/p&gt;

&lt;p&gt;使用 sqlalchemy&lt;/p&gt;

&lt;p&gt;整合 SQLite UDF (用户定义函数) 到 webpy 数据库层&lt;/p&gt;

&lt;p&gt;使用字典动态构造where子句&lt;/p&gt;

&lt;h2&gt;Deployment 部署:&lt;/h2&gt;

&lt;p&gt;通过Fastcgi和lighttpd部署&lt;/p&gt;

&lt;p&gt;通过Webpy和Nginx with FastCGI搭建Web.py&lt;/p&gt;

&lt;p&gt;CGI deployment through Apache (未译)&lt;/p&gt;

&lt;p&gt;mod-pythondeployment through Apache (requested)&lt;/p&gt;

&lt;p&gt;通过Apache和mod-wsgi部署&lt;/p&gt;

&lt;p&gt;mod-wsgi deployment through Nginx (未译)&lt;/p&gt;

&lt;p&gt;Fastcgi deployment through Nginx (未译)&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/08/06/webpy</link>
                <guid>http://i.justpic.org/2013/08/06/webpy</guid>
                <pubDate>2013-08-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>jquery add element in the html dom</title>
                <description>&lt;h1&gt;使用jquery增加元素节点&lt;/h1&gt;

&lt;p&gt;add one element in the parent&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $li_1=$(&quot;&amp;lt;li&amp;gt;新增节点：数据结构&amp;lt;/li&amp;gt;&quot;);
var $li_2=$(&quot;&amp;lt;li&amp;gt;新增节点：设计模式&amp;lt;/li&amp;gt;&quot;);

var $parent=$(&quot;.nm_ul&quot;);
$parent.append($li_1);
$parent.append($li_2);
$parent.append($li_1).append($li_2);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;add attribute in the added element:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $li_1=$(&quot;&amp;lt;li title=&#39;新增节点：数据结构&#39;&amp;gt;数据节点&amp;lt;/li&amp;gt;&quot;);
var $parent=$(&quot;.nm_ul&quot;);
$parent.append($li_1);
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/2013/07/29/jquery-add-element-in-the-html-dom</link>
                <guid>http://i.justpic.org/2013/07/29/jquery-add-element-in-the-html-dom</guid>
                <pubDate>2013-07-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>web.py note</title>
                <description>&lt;h1&gt;webpy学习笔记&lt;/h1&gt;

&lt;p&gt;web.ctx
web.loadhook(handler)函数在web请求前执行handler函数
web.unloadhook(handler)函数在web请求后执行的handler函数&lt;/p&gt;

&lt;p&gt;seeother:303临时重定向
redirect：301永久重定向&lt;/p&gt;

&lt;p&gt;seeother(../)seeother（/）前者返回到上层目录，后者重定向到当强目录，造成 无限次的重定向，是一种错误的用法。&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/07/28/webpy-note</link>
                <guid>http://i.justpic.org/2013/07/28/webpy-note</guid>
                <pubDate>2013-07-28T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>sqlalchemy dynamic mapping</title>
                <description>&lt;h1&gt;sqlalchemy动态映射&lt;/h1&gt;

&lt;p&gt;代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from sqlalchemy import *
from sqlalchemy.orm import *

metadata=MetaData(create_engine(&quot;sqlite://&quot;,echo=True)
t1=Table(&quot;t1&quot;,metadata,Column(&#39;id&#39;,Integer,primary_key=True))
t2=Table(&quot;t2&quot;,metadata,Column(&quot;id&quot;,Integer,primary_key=True))
metadata.create_all()

def map_class_to_some_table(cls,table,entity_name,**kw):
    newcls=type(entity_name,(cls,),{})
    mapper(newcls,table,**kw)
    return newcls

class Foo(object):
    pass

T1Foo=map_class_to_some_table(Foo,t1,&quot;T1Foo&quot;)
T2Foo=map_class_to_some_table(Foo,t2,&quot;T2Foo&quot;)

sess=sessionmaker()()
sess.add_all([T1Foo(),T1Foo(),T2Foo(),T1Foo()])
print sess.query(T1Foo).all()
print sess.query(T2Foo).all()
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/2013/07/26/sqlalchemy-dynamic-mapping</link>
                <guid>http://i.justpic.org/2013/07/26/sqlalchemy-dynamic-mapping</guid>
                <pubDate>2013-07-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>premature optimization</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://scientopia.org/blogs/goodmath/2011/05/03/the-perils-of-premature-optimization/&quot;&gt;premature optimization&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/07/26/premature-optimization</link>
                <guid>http://i.justpic.org/2013/07/26/premature-optimization</guid>
                <pubDate>2013-07-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>memo on the trade</title>
                <description>&lt;p&gt;RTA github&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;www.lowindata.com&quot;&gt;backbonejs note&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;www.icoding.co/2012/04/backbonejs-html-2&quot;&gt;backbonejs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/pyctp/&quot;&gt;pyctp&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/07/22/memo-on-the-trade</link>
                <guid>http://i.justpic.org/2013/07/22/memo-on-the-trade</guid>
                <pubDate>2013-07-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python asynchrous network</title>
                <description>&lt;hr /&gt;

&lt;h2&gt;select,poll,epoll test in python&lt;/h2&gt;

&lt;p&gt;selecttest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import select
import socket
import Queue

#create a socket
server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
server.setblocking(False)
#set option reused
server.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)

server_address=(&#39;localhost&#39;,10001)
server.bind(server_address)

server.listen(10)

#sockets from which we except to read
inputs=[server]

#sockets from which we expect to write
outputs=[]

#Outgoing message queues (socket:Queue)
message_queues={}

#A optional parameter for select is TIMEOUT
timeout=20

while inputs:
    print &quot;waiting for next event&quot;
    #first parameter--read list,second parameter--write list,third parameter--error list
    readable,writable,exceptional=select.select(inputs,outputs,inputs,timeout)

    #when timeout reached,select return three empty list
    if not (readable or writable or exceptional):
        print &quot;Time out!&quot;
        break;
    for s in readable:
        if s is server:
            #A &quot;readable&quot; socket is ready to accept a connection
            connection,client_address=s.accept()
            print &quot;  connection from&quot;,client_address
            connection.setblocking(0)
            inputs.append(connection)
            message_queues[connection]=Queue.Queue()
        else:
            data=s.recv(1024)
            if data:
                print &quot;received &quot;,data, &quot;from &quot;,s.getpeername()
                message_queues[s].put(data)
                #Add output  channel for response
                if s not in outputs:
                    outputs.append(s)
            else:
                #Interpret empty result as closed connection
                print &quot; closing&quot;, client_address
                if s in outputs:
                    outputs.remove(s)
                inputs.remove(s)
                s.close()
                #remove message queue
                del message_queues[s]
    for s in writable:
        try:
            next_msg=message_queues[s].get_nowait()
        except Queue.Empty:
            print &quot; &quot;,s.getpeername,&quot; queue empty&quot;
            outputs.remove(s)
        else:
            print &quot;sending &quot;,next_msg,&quot; to&quot;,s.getpeername()
            s.send(next_msg)
    for s in exceptional:
        print &quot; exception condition on &quot;,s.getpeername()
        #stop listening for input on the connection
        inputs.remove(s)
        if s in outputs:
            outputs.remove(s)
        s.close()
        #Remove message queue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;polltest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket
import select
import Queue

server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
server.setblocking(False)
server.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
server_address=(&quot;localhost&quot;,10001)

print &quot;Starting up on %s port %s&quot; % server_address
server.bind(server_address)
server.listen(5)
message_queues={}
#The timeout value is represente in milliseconds,instead of seconds
timeout=100
#Create a limit for the next
READ_ONLY=(select.POLLIN | select.POLLPRI | select.POLLHUP | select.POLLERR)
READ_WRITE=(READ_ONLY|select.POLLOUT)

#set up the poller
poller=select.poll()
poller.register(server,READ_ONLY)
#map file descriptors to socket objects
fd_to_socket={server.fileno():server,}
while True:
    print &quot;Waiting for the next event&quot;
    events=poller.poll(timeout)
    print &quot;*&quot;*20
    print len(events)
    print events
    print &quot;*&quot;*20
    for fd,flag in events:
        s=fd_to_socket[fd]
        if flag &amp;amp; (select.POLLIN|select.POLLPRI):
            if s is server:
                #A readable socket is ready to accept a connection
                connection,client_address=s.accept()
                print &quot;Connection &quot;,client_address
                connection.setblocking(False)

                fd_to_socket[connection.fileno()]=connection
                poller.register(connection,READ_ONLY)

                #Give the connection a queue to send data
                message_queues[connection]=Queue.Queue
            else:
                data=s.recv(1024)
                if data:
                    # A readable client socket has data
                    print &quot; received %s from %s &quot; % (data,s.getpeername())
                    message_queues[s].put(data)
                    poller.modify(s,READ_WRITE)
                else:
                    #Close the connection
                    print &quot; closing &quot;,s.getpeername()
                    #Stop listening for input on the connection
                    poller.unregister(s)
                    s.close()
                    del message_queues[s]
        elif flag &amp;amp; select.POLLHUP:
            #A client that &quot;Hang up&quot;,to be closed.
            print &quot;closing &quot;,s.getpeername,&quot;(HUP)&quot;
            poller.unregister(s)
            s.close()
        elif flag &amp;amp; select.POLLOUT:
            #SOCKET is ready to send DATA,if there is any to send
            try:
                next_msg=message_queues[s].get_nowait()
            except Queue.Empty:
                #No messages waiting so stop checking
                print s.getpeername,&quot; queue empty&quot;
                poller.modify(s,READ_ONLY)
            else:
                print &quot; sending %s to %s&quot; %(next_msg,s.getpeername())
                s.send(next_msg)
        elif flag &amp;amp; select.POLLERR:
            #Any events with POLLER cause the server to close the sockets
            print &quot; exception on&quot;,s.getpeername()
            poller.unregister(s)
            s.close()
            del message_queues[s]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;epolltest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket,logging
import select,errno

logger=logging.getLogger(&quot;network-server&quot;)

def InitLog():
    logger.setLevel(logging.DEBUG)

    fh=logging.FileHandler(&quot;network-server.log&quot;)
    fh.setLevel(logging.DEBUG)
    ch=logging.StreamHandler()
    ch.setLevel(logging.DEBUG)

    formatter=logging.Formatter(&quot;%(asctime)s - %(name)s - %(levelname)s -%(message)s&quot;)
    ch.setFormatter(formatter)
    fh.setFormatter(formatter)

    logger.addHandler(fh)
    logger.addHandler(ch)

if __name__==&quot;__main__&quot;:
    InitLog()

    try:
        listen_fd=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    except socket.error,msg:
        logger.error(&quot;create a socket failed&quot;)

    try:
        listen_fd.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
    except socket.error,msg:
        logger.error(&quot;setsocketopt error&quot;)

    try:
        listen_fd.bind((&#39;&#39;,10001))
    except socket.error,msg:
        logger.error(&quot;listen file id bind ip error&quot;)

    try:
        listen_fd.listen(10)
    except socket.error,msg:
        logger.error(msg)
    try:
        epoll_fd=select.epoll()
        epoll_fd.register(listen_fd.fileno(),select.EPOLLIN)
    except select.error,msg:
        logger.error(msg)

    connections={}
    addresses={}
    datalist={}
    while True:
        epoll_list = epoll_fd.poll()
        for fd,events in epoll_list:
            if fd==listen_fd.fileno():
                conn,addr=listen_fd.accept()
                logger.debug(&quot;accept connction from  %s,%d,fd = %d&quot; %(addr[0],addr[1],conn.fileno()))
                conn.setblocking(0)
                epoll_fd.register(conn.fileno(),select.EPOLLIN|select.EPOLLET)
                connections[conn.fileno()]=conn 
                addresses[conn.fileno()]=addr
            elif select.EPOLLIN  &amp;amp; events:
                datas=&#39;&#39;
                while True:
                    try:
                        data=connections[fd].recv(10)
                        if not data and not datas:
                            epoll_fd.unregister(fd)
                            connections[fd].close()
                            logger.debug(&quot;%s,%d closed&quot; % (addresses[fd][0],addresses[fd][1]))

                            break
                        else:
                            datas+=data 
                    except socket.error,msg:
                        if msg.errno==errno.EAGAIN:
                            logger.debug(&quot;%s receive %s&quot; % (fd,datas))
                            datalist[fd]=datas
                            epoll_fd.modify(fd,select.EPOLLET|select.EPOLLOUT)
                            break
                        else:
                            epoll_fd.unregister(fd)
                            connections[fd].close()
                            logger.error(msg)
                            break
            elif select.EPOLLHUP &amp;amp; events:
                epoll_fd.unregister(fd)
                connections[fd].close()
                logger.debug(&quot;%s ,%d closed&quot; % (addresses[fd][0],addresses[fd][1]))
            elif select.EPOLLOUT &amp;amp; events:
                sendLen=0
                while True:
                    sendLen += connections[fd].send(datalist[fd][sendLen:])
                    if sendLen == len(datalist[fd]):
                         break
                epoll_fd.modify(fd,select.EPOLLIN|select.EPOLLET)
            else:
                continue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;commontest.py(client code)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket
messages = [&quot;This is the message&quot;,
         &quot;It will be send&quot;,
         &quot;in parts&quot;]

print &quot;Connect to the server&quot;

server_address=(&quot;localhost&quot;,10001)

#Create a TCP/IP sock
socks=[]
for i in range(10):
     socks.append(socket.socket(socket.AF_INET,socket.SOCK_STREAM))

for s in socks:
    s.connect(server_address)

counter=0
for message in messages:
    for s in socks:
        counter+=1
        print &quot; %s sending %s &quot;%(s.getpeername(),message+&quot; version &quot;+str(counter))
        s.send(message+&quot; version &quot;+str(counter))
    for s in socks:
        data=s.recv(1024)
        print &quot; %s received %s &quot; % (s.getpeername(),data)
        if not data:
            print &quot;closing socket&quot;,s.getpeername()
            s.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;benchmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; 针对epoll的使用有一篇很好的&lt;a href=&quot;scotdoyle.com/python-epoll-howto.html&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 针对asyncore的介绍和使用有很好的两篇博客：&lt;a href=&quot;blog.csdn.net/livefun/article/details/8721772&quot;&gt;blog1&lt;/a&gt;
  &lt;a href=&quot;http://www.nightmare.com/medusa/async_sockets.html&quot;&gt;blog2&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/python%20network/2013/07/15/python-asynchrous-network</link>
                <guid>http://i.justpic.org/python%20network/2013/07/15/python-asynchrous-network</guid>
                <pubDate>2013-07-15T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Run Multiple-python on your ubuntu</title>
                <description>&lt;h1&gt;ubuntu上安装多个版本的python&lt;/h1&gt;

&lt;p&gt;安装python3.3在ubuntu上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties
sudo add-apt-repository ppa:fkrull/deadsnakes
sudo apt-get update
sudo apt-get install python3.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立软链接：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s /usr/bin/python3.3 /usr/bin/python3.3m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安转python2.7.5再ubuntu上:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:fkrull/deadsnakes
sudo apt-get update
sudo apt-get install python2.4 python2.5 python2.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用virtualenv来定制自己的环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;virtualenv -p /usr/bin/python3.3 python3.3env
virtualenv -p /usr/bin/python2.7.5 python2.7.5env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok!&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/07/02/install-multiple-version-of-python-with-virtualenv</link>
                <guid>http://i.justpic.org/2013/07/02/install-multiple-version-of-python-with-virtualenv</guid>
                <pubDate>2013-07-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>com learning</title>
                <description>&lt;p&gt;&lt;a href=&quot;http://www.vckbase.com/index.php/wv/1315&quot;&gt;深入理解COM&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/06/14/com-learning</link>
                <guid>http://i.justpic.org/2013/06/14/com-learning</guid>
                <pubDate>2013-06-14T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>protobuffer</title>
                <description>&lt;p&gt;google protobuffer待记&lt;/p&gt;
</description>
                <link>http://i.justpic.org/2013/06/11/protobuffer</link>
                <guid>http://i.justpic.org/2013/06/11/protobuffer</guid>
                <pubDate>2013-06-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>resolution to scipy installation error</title>
                <description>&lt;h1&gt;ubuntu上安装scipy出错解决方法&lt;/h1&gt;

&lt;p&gt;安装scipy时出现Blas错误时，需安装以下几个包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get libblas3gf libblas-doc libblas-dev liblapack3gf liblapack-doc liblapack-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装matplib出现ft2build.h等头文件无法找出时，解决方法：
具体解决方案如下：
（1）安装freetype2开发包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libfreetype6-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（2）安装png开发包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libpng-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（3）安装matplotlib:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo python setup.py install
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/python/2013/06/08/scipy-error</link>
                <guid>http://i.justpic.org/python/2013/06/08/scipy-error</guid>
                <pubDate>2013-06-08T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install wine on ubuntu 12.04</title>
                <description>&lt;h1&gt;Wine error&lt;/h1&gt;

&lt;p&gt;Code for install wine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo setcap CAP_NET_RAW=ep /usr/bin/wine
sudo setcap CAP_NET_RAW=ep /usr/bin/wineserver
sudo setcap CAP_NET_RAW=ep /путь_до_л2/l2.exe
&lt;/code&gt;&lt;/pre&gt;
</description>
                <link>http://i.justpic.org/linux/2013/06/06/wine-error</link>
                <guid>http://i.justpic.org/linux/2013/06/06/wine-error</guid>
                <pubDate>2013-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install hdf5 on ubuntu</title>
                <description>&lt;h1&gt;install hdf5 on ubuntu 12.04&lt;/h1&gt;

&lt;p&gt;you can probably install the debian libraries into quantal with no issues, precise is less likely to work, but it might possibly you will have to build it from source to get everything right.&lt;br/&gt;
Code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$apt&lt;/span&gt;-get install devscripts equivs ubuntu-dev-tools 
    &lt;span class=&quot;nv&quot;&gt;$pull&lt;/span&gt;-debian-source hdf5 experimental    
    &lt;span class=&quot;nv&quot;&gt;$cd&lt;/span&gt; hdf5-*
    &lt;span class=&quot;nv&quot;&gt;$sudo&lt;/span&gt; mk-build-deps -ir
    &lt;span class=&quot;nv&quot;&gt;$debuild&lt;/span&gt; -us -uc
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述方法现在已经不适用,Google后发现,可以直接使用hdf5二进制包,由于本机为64bit linux,下载64位下的二进制包：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$wget&lt;/span&gt; http://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.9/bin/linux-x86_64/hdf5-1.8.9-linux-x86_64-shared.tar.gz
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解压后，并在.bashrc中设置：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;:/usr/local/lib:&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/hdf5-1.8.9-linux-x86_64-shared/lib
    &lt;span class=&quot;nv&quot;&gt;$export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;HDF5_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/hdf5-1.8.9-linux-x86_64-shared
    &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt; .bashrc
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装 blosc (可选)
安装 lzo2-2 lzo2-dev&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    sudo apt-get install lzo2-2 lzo2-dev
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;至此HDF5可用&lt;/p&gt;
</description>
                <link>http://i.justpic.org/python/yt-project/2013/06/05/installhdf5</link>
                <guid>http://i.justpic.org/python/yt-project/2013/06/05/installhdf5</guid>
                <pubDate>2013-06-05T19:11:11+08:00</pubDate>
        </item>


</channel>
</rss>
