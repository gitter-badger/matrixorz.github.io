<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Just Pic</title>
        <description>Just Pic - Hai</description>
        <link>http://matrixorz.github.io</link>
        <link>http://matrixorz.github.io</link>
        <lastBuildDate>2014-01-11T22:12:12+08:00</lastBuildDate>
        <pubDate>2014-01-11T22:12:12+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>best award paper</title>
                <description>&lt;p&gt;http://jeffhuang.com/best_paper_awards.html##&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2014/01/01/best-award-paper</link>
                <guid>http://matrixorz.github.io/2014/01/01/best-award-paper</guid>
                <pubDate>2014-01-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install redmine in ubuntu</title>
                <description>&lt;p&gt;install redmine on ubuntu12.04(http://redminecrm.com/boards/4/topics/448-installing-redmine-2-2-passenger-nginx-rvm-on-ubuntu-12-04)&lt;/p&gt;

&lt;p&gt;chmod 777 命令 来解决权限问题&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/12/04/install-redmine-in-ubuntu</link>
                <guid>http://matrixorz.github.io/2013/12/04/install-redmine-in-ubuntu</guid>
                <pubDate>2013-12-04T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install World Community Grid on a headless Ubuntu Server</title>
                <description>&lt;pre&gt;&lt;code&gt;sudo apt-get aptitude install boinc-client&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(you can also download it from wcg and install)&lt;/p&gt;

&lt;p&gt;find your account key: boinccmd –lookup_account http://www.worldcommunitygrid.org username password&lt;/p&gt;

&lt;p&gt;You should get a response something like this dfb74c9b9&lt;/p&gt;

&lt;p&gt;attach to your project boinccmd –project_attach http://www.worldcommunitygrid.org dfb74c….&lt;/p&gt;

&lt;p&gt;if you want to verify your attached enter the following command: boinccmd –get_state&lt;/p&gt;

&lt;p&gt;Futher resources:&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/installing_BOINC_ON_Ubuntu&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/Client_configuration&lt;/p&gt;

&lt;p&gt;http://boinc.berkeley.edu/wiki/Stop_or_start_BOINC daemon_after_boot&lt;/p&gt;

&lt;p&gt;references:&lt;/p&gt;

&lt;p&gt;blog.joelchristian.com/?p=291&lt;/p&gt;

&lt;p&gt;misctechmusings.com/linux/boinc-cli-for-world-community-grid/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/19/install-world-community-grid-on-a-headless-ubuntu-server</link>
                <guid>http://matrixorz.github.io/2013/11/19/install-world-community-grid-on-a-headless-ubuntu-server</guid>
                <pubDate>2013-11-19T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>how can i faced my fears and learned to be good at math</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/11/14/how-can-i-faced-my-fears-and-learned-to-be-good-at-math</link>
                <guid>http://matrixorz.github.io/2013/11/14/how-can-i-faced-my-fears-and-learned-to-be-good-at-math</guid>
                <pubDate>2013-11-14T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>a little surprised</title>
                <description>&lt;p&gt;(www.jstatsoft.org/v27) cos.name/2013/02/rise-of-the-machine/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/10/a-little-surprised</link>
                <guid>http://matrixorz.github.io/2013/11/10/a-little-surprised</guid>
                <pubDate>2013-11-10T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>data analysis</title>
                <description>&lt;p&gt;http://www.datagenetics.com/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/09/data-analysis</link>
                <guid>http://matrixorz.github.io/2013/11/09/data-analysis</guid>
                <pubDate>2013-11-09T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>brain strom</title>
                <description>&lt;p&gt;server{ listen 4002; server_name localhost; access_log logs/access.log;&lt;/p&gt;

&lt;p&gt;location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-NginxX-Proxy true;&lt;/p&gt;

&lt;p&gt;proxy_pass http://backend; proxy_redirect off;&lt;/p&gt;

&lt;p&gt;proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection “upgrade”; } } upstream backend { server 127.0.0.1:3201; }&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/07/brain-strom</link>
                <guid>http://matrixorz.github.io/2013/11/07/brain-strom</guid>
                <pubDate>2013-11-07T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python web</title>
                <description>&lt;p&gt;web.py源码解析:http://www.myexception.cn/perl-python/1351788.html WSGI:http://ivory.idyll.org/articles/wsgi-intro/what-is-wsgi.html&lt;/p&gt;

&lt;p&gt;web server side:&lt;/p&gt;

&lt;p&gt;服务器必须做两件事情：&lt;/p&gt;

&lt;p&gt;一个environ字典和一个start_response函数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iterable=app(environ,start_response)
for data in iterable:
    #send data to client&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WSGI中分块传输大文件，使用yield：（rhodesmill.org/brandon/2013/chunked-wsgi）&lt;/p&gt;

&lt;p&gt;后续：&lt;/p&gt;

&lt;p&gt;http://benosteen.wordpress.com&lt;/p&gt;

&lt;p&gt;My swiss army toolkit for distributed/multiproesssing systems&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/06/python-web</link>
                <guid>http://matrixorz.github.io/2013/11/06/python-web</guid>
                <pubDate>2013-11-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>leaning python site</title>
                <description>&lt;p&gt;basic:&lt;/p&gt;

&lt;p&gt;http://woodpecker.org.cn/abyteofpython_cn/chinese/ http://www.codecademy.com/zh/tracks/python http://inventwithpython.com/chapters/&lt;/p&gt;

&lt;p&gt;medium:&lt;/p&gt;

&lt;p&gt;https://github.com/gregmalcolm/python_koans&lt;/p&gt;

&lt;p&gt;advanced: http://anandology.com/python-practice-book www.kevinsheppard.com/images/0/09/Python_introduction.pdf www.tuiku.com maybe is also good&lt;/p&gt;

&lt;p&gt;online game: www.checkio.org&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/05/leaning-python-site</link>
                <guid>http://matrixorz.github.io/2013/11/05/leaning-python-site</guid>
                <pubDate>2013-11-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>deploy python on nginx</title>
                <description>&lt;p&gt;serholiu.com/tornado-nginx-supervisord&lt;/p&gt;

&lt;p&gt;http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/11/04/deploy-python-on-nginx</link>
                <guid>http://matrixorz.github.io/2013/11/04/deploy-python-on-nginx</guid>
                <pubDate>2013-11-04T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install project on preferati</title>
                <description>&lt;p&gt;sudo apt-get install nginx sudo apt-get install git sudo apt-get install mysql-server sudo apt-get install python-dev&lt;/p&gt;

&lt;p&gt;install easy_install on ubuntu: sudo apt-get install python-setuptools sudo easy_install virtualenv sudo easy_install pip virtualenv ~/trade source ~/trade/bin/activate install numpy scipy pandas and ta-lib sudo pip install Cython&lt;/p&gt;

&lt;p&gt;—-due to blas libs—- sudo apt-get install gfortran libopenblas-dev liblapack-dev g++ pip install numpy pip install scipy&lt;/p&gt;

&lt;h1 id=&quot;install_talib&quot;&gt;install ta-lib&lt;/h1&gt;

&lt;p&gt;cd ~ wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz sudo apt-get install build-essential tar -zxvf ta-lib-0.4.0-src.tar.gz cd ta-lib-0.4.0 ./configure –prefix=/usr make sudo make install&lt;/p&gt;

&lt;h1 id=&quot;install_gevent&quot;&gt;install gevent&lt;/h1&gt;

&lt;p&gt;wget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz tar -zxvf ./configure make sudo make install&lt;/p&gt;

&lt;p&gt;cd ~/www git clone https://github.com/pydata/pandas.git git clone https://github.com/mrjbq7/ta-lib.git&lt;/p&gt;

&lt;p&gt;update the nginx: sudo apt-get install python-software-properties sudo apt-get install sotware-properties-common sudo add-apt-repository ppa:nginx/stable sudo apt-get update sudo apt-get install nginx&lt;/p&gt;

&lt;h1 id=&quot;mysql_init&quot;&gt;mysql init&lt;/h1&gt;

&lt;p&gt;sudo apt-get install mysql-server libmysqld-dev pip install MySQL-python insert into mysql.user(Host,User,Password) values(“localhost”,”david”,password(“david”)); 用户授权： 给本地用户mql分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123456。 mysql&amp;gt;grant all privileges on &lt;em&gt;.&lt;/em&gt; to david@localhost identified by ‘david’;&lt;/p&gt;

&lt;h1 id=&quot;install_redis&quot;&gt;install redis&lt;/h1&gt;

&lt;p&gt;http://rubyer.me/blog/638/ redis.io&lt;/p&gt;

&lt;h1 id=&quot;uwsgi_or_gunicorn&quot;&gt;uwsgi or gunicorn&lt;/h1&gt;</description>
                <link>http://matrixorz.github.io/2013/10/27/install-project-on-preferati</link>
                <guid>http://matrixorz.github.io/2013/10/27/install-project-on-preferati</guid>
                <pubDate>2013-10-27T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>how to write a crawler</title>
                <description>&lt;p&gt;http://www.emanueleminotto.it/how-to-write-a-crawler&lt;/p&gt;

&lt;p&gt;http://benosteen.wordpress.com/2010/02/11/my-swiss-army-toolkit-for-distributedmultiprocessing-systems/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/10/26/how-to-write-a-crawler</link>
                <guid>http://matrixorz.github.io/2013/10/26/how-to-write-a-crawler</guid>
                <pubDate>2013-10-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>qt fourteen steps</title>
                <description>&lt;p&gt;1.Hello ,World!&lt;/p&gt;

&lt;p&gt;2.调用退出 3.家庭价值 4.使用窗口部件 5.组装积木 6.组装丰富的积木！ 7.一个事物领导另一个 8.准备战斗 9.你可以使用加农炮了 10.像丝一样滑 11.给它一个炮弹 12.悬在空中的砖 13.游戏结束 14.面对墙壁&lt;/p&gt;

&lt;p&gt;同普通的 C++ 成员函数一样，槽函数也分为三种类型，即 public slots、private slots 和 protected slots。 public slots：在这个区内声明的槽意味着任何对象都可将信号与之相连接。这对于组件编程非常有用，你可以创建彼此互不了解的对象，将它们的信号与槽进行连接以便信息能够正确的传递。 protected slots：在这个区内声明的槽意味着当前类及其子类可以将信号与之相连接。这适用于那些槽，它们是类实现的一部分，但是其界面接口却面向外部。 private slots：在这个区内声明的槽意味着只有类自己可以将信号与之相连接。这适用于联系非常紧密的类。&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/10/22/qt-fourteen-steps</link>
                <guid>http://matrixorz.github.io/2013/10/22/qt-fourteen-steps</guid>
                <pubDate>2013-10-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install numpy scipy on ubuntu</title>
                <description>&lt;pre&gt;&lt;code&gt;sudo pip install numpy
sudo apt-get install libatlas-base-dev gfortran
sudo pip install scipy
sudo pip install matplotlib   # recommended&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Line 2 was necessary for SciPy, otherwise it was complaining that BLAS and a Fortran compiler were missing. Note that gfortran replaces the package g77.&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/10/18/install-numpy-scipy-on-ubuntu</link>
                <guid>http://matrixorz.github.io/2013/10/18/install-numpy-scipy-on-ubuntu</guid>
                <pubDate>2013-10-18T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python machine learning</title>
                <description>&lt;p&gt;python machine learning(http://www.xavierdupre.fr/blog/2013-09-15_nojs.html) http://www.yuanyong.org/blog/python/k-means-using-python&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/10/17/python-machine-learning</link>
                <guid>http://matrixorz.github.io/2013/10/17/python-machine-learning</guid>
                <pubDate>2013-10-17T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>git</title>
                <description>&lt;p&gt;https://gist.github.com/jbenet/ee6c9ac48068889b0912 http://gitref.cyj.me/zh/remotes/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/09/29/git</link>
                <guid>http://matrixorz.github.io/2013/09/29/git</guid>
                <pubDate>2013-09-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>note 9_25</title>
                <description>&lt;p&gt;程序Trade的改进： matplotlib的融合web summary的更正&lt;/p&gt;

&lt;p&gt;图像增强： 二值化 直方图均衡 膨胀，奇异点处理&lt;/p&gt;

&lt;p&gt;手写笔迹识别&lt;/p&gt;

&lt;p&gt;libsvm等多分类：&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/09/25/note-9_25</link>
                <guid>http://matrixorz.github.io/2013/09/25/note-9_25</guid>
                <pubDate>2013-09-25T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>nginx permission root</title>
                <description>&lt;p&gt;nginx 13:permission denied solved: http://serverfault.com/questions/246609/trouble-with-nginx-and-serving-from-multiple-directories-under-the-same-domain&lt;/p&gt;

&lt;p&gt;The root directive is the problem here. Quote from the doc:&lt;/p&gt;

&lt;p&gt;note: Keep in mind that the root will still append the directory to the request so that a request for “/i/top.gif” will not look in “/spool/w3/top.gif” like might happen in an Apache-like alias configuration where the location match itself is dropped. Use the alias directive to achieve the Apache-like functionality.&lt;/p&gt;

&lt;p&gt;Basically, only use root for real roots: if the content is to be at / use root. If it’s going to end on a subfolder, use alias:&lt;/p&gt;

&lt;p&gt;location /map/ { alias /home/user/public_html/map/; } Also check what user nginx is running as and make sure that this user can access /home/user/public_html/map&lt;/p&gt;

&lt;p&gt;share|improve this answer edited Jan 26 ‘12 at 15:30&lt;/p&gt;

&lt;p&gt;answered Mar 12 ‘11 at 15:39&lt;/p&gt;

&lt;p&gt;coredump 8,35011131 It shows up properly in access.log now, as /map/, but I still get a 403 forbidden error, public_html/ and every directory under it is 777, and I’ve tried chowning it to nginx and root, but I still get the 403 error. Any ideas? – Phase Mar 12 ‘11 at 17:25 @phase well I never had a similar problem, but check this link and this other one. Looks like lack of permission to read on each directory of the whole path you are serving (in your case, home, user, public_html and map). – coredump Mar 12 ‘11 at 20:00 You need to be careful with /s when using alias. The location and alias you posted will strip the / from the request, but the alias doesn’t add it back, so a request for /map/foo.html will actually look for /home/user/public_htmlfoo.html. When the location prefix matches the alias suffix, it’s easier to use use root /home/user/public_html. You could also fix it by just adding a / onto the end of the alias /home/user/public_html/map/;&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/09/18/nginx-permission-root</link>
                <guid>http://matrixorz.github.io/2013/09/18/nginx-permission-root</guid>
                <pubDate>2013-09-18T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>asynchrous,synchrous,blocking,unblocking network</title>
                <description>&lt;p&gt;Linux下的五种I/O模型 阻塞I/O（blocking I/O） 非阻塞I/O（nonblocking I/O）&lt;br /&gt;I/O服用（select和poll）（I/O multiplexing） 信号驱动I/O（signal driven I/O（SIGIO）） 异步I/O（asynchronous I/O（the POSIX aio_functions)) 前四种都是同步，只用最后一种是异步I/O&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/09/12/asynchroussynchrousblockingunblocking-network</link>
                <guid>http://matrixorz.github.io/2013/09/12/asynchroussynchrousblockingunblocking-network</guid>
                <pubDate>2013-09-12T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>tt</title>
                <description>&lt;p&gt;2789987&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/09/11/tt</link>
                <guid>http://matrixorz.github.io/2013/09/11/tt</guid>
                <pubDate>2013-09-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>machine learning in action</title>
                <description>&lt;p&gt;https://github.com/pbharrin/machinelearninginaction zhan.renren.com/quantitativefinance?checked=true&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/08/08/machine-learning-in-action</link>
                <guid>http://matrixorz.github.io/2013/08/08/machine-learning-in-action</guid>
                <pubDate>2013-08-08T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>webpy</title>
                <description>&lt;p&gt;webpy 中文文档学习目录&lt;/p&gt;

&lt;p&gt;web py 安装 webpy webpy3.0 新手指南 webpy CookBook&lt;/p&gt;

&lt;h2 id=&quot;webpy&quot;&gt;webpy基本应用:&lt;/h2&gt;

&lt;p&gt;Hello World 提供静态文件访问 理解URL控制 跳转与重定向 使用子应用 提供XML访问 从post读取原始数据&lt;/p&gt;

&lt;h2 id=&quot;&quot;&gt;高级应用:&lt;/h2&gt;

&lt;p&gt;用web.ctx获得客户端信息 应用处理器，添加钩子和卸载钩子 如何使用web.background 自定义NotFound信息 如何流传输大文件 对自带的webserver日志进行操作 用cherrypy提供SSL支持 实时语言切换&lt;/p&gt;

&lt;h2 id=&quot;sessions_and_user_state_&quot;&gt;Sessions and user state 会话和用户状态:&lt;/h2&gt;

&lt;p&gt;如何使用Session 如何在调试模式下使用Session 在template中使用session 如何操作Cookie 用户认证 一个在postgreSQL数据库环境下的用户认证的例子 如何在子应用中操作Session&lt;/p&gt;

&lt;h2 id=&quot;utils_&quot;&gt;Utils 实用工具&lt;/h2&gt;

&lt;p&gt;如何发送邮件 如何利用Gmail发送邮件 使用soaplib实现webservice&lt;/p&gt;

&lt;h2 id=&quot;templates_&quot;&gt;Templates 模板&lt;/h2&gt;

&lt;p&gt;Templetor: web.py 模板系统 使用站点布局模板 交替式风格 (未译) 导入函数到模板中 (未译) 模板文件中的i18n支持 在web.py中使用Mako模板引擎 在web.py中使用Cheetah模板引擎 在web.py中使用Jinja2模板引擎 如何在谷歌应用程序引擎使用模板&lt;/p&gt;

&lt;h2 id=&quot;testing_&quot;&gt;Testing 测试:&lt;/h2&gt;

&lt;p&gt;Testing with Paste and Nose (未译) RESTful doctesting using an application’s request method (未译)&lt;/p&gt;

&lt;h2 id=&quot;user_input_&quot;&gt;User input 用户输入:&lt;/h2&gt;

&lt;p&gt;文件上传 保存上传的文件 上传文件大小限定 通过 web.input 接受用户输入 怎样使用表单 显示个别表单字段&lt;/p&gt;

&lt;h2 id=&quot;database_&quot;&gt;Database 数据库&lt;/h2&gt;

&lt;p&gt;使用多数据库 Select: 查询数据 Update: 更新数据 Delete: 删除数据 Insert: 新增数据 Query: 高级数据库查询 怎样使用数据库事务 使用 sqlalchemy 整合 SQLite UDF (用户定义函数) 到 webpy 数据库层 使用字典动态构造where子句&lt;/p&gt;

&lt;h2 id=&quot;deployment_&quot;&gt;Deployment 部署:&lt;/h2&gt;

&lt;p&gt;通过Fastcgi和lighttpd部署 通过Webpy和Nginx with FastCGI搭建Web.py CGI deployment through Apache (未译) mod-pythondeployment through Apache (requested) 通过Apache和mod-wsgi部署 mod-wsgi deployment through Nginx (未译) Fastcgi deployment through Nginx (未译)&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/08/06/webpy</link>
                <guid>http://matrixorz.github.io/2013/08/06/webpy</guid>
                <pubDate>2013-08-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>trade memo 1</title>
                <description>&lt;p&gt;pyctp: https://code.google.com/p/pyctp/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/29/trade-memo-1</link>
                <guid>http://matrixorz.github.io/2013/07/29/trade-memo-1</guid>
                <pubDate>2013-07-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>jquery add element in the html dom</title>
                <description>&lt;p&gt;add one element in the parent var $li_1=$(”&lt;li&gt;新增节点：数据结构&lt;/li&gt;”); var $li_2=$(”&lt;li&gt;新增节点：设计模式&lt;/li&gt;”);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $parent=$(&amp;quot;.nm_ul&amp;quot;);
$parent.append($li_1);
$parent.append($li_2);
$parent.append($li_1).append($li_2);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;add attribute in the added element: var $li_1=$(”&lt;li title=&#39;新增节点：数据结构&#39;&gt;数据节点&lt;/li&gt;”);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $parent=$(&amp;quot;.nm_ul&amp;quot;);
$parent.append($li_1);&lt;/code&gt;&lt;/pre&gt;</description>
                <link>http://matrixorz.github.io/2013/07/29/jquery-add-element-in-the-html-dom</link>
                <guid>http://matrixorz.github.io/2013/07/29/jquery-add-element-in-the-html-dom</guid>
                <pubDate>2013-07-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>web.py note</title>
                <description>&lt;p&gt;web.ctx web.loadhook(handler)函数在web请求前执行handler函数 web.unloadhook(handler)函数在web请求后执行的handler函数&lt;/p&gt;

&lt;p&gt;seeother:303临时重定向 redirect：301永久重定向&lt;/p&gt;

&lt;p&gt;seeother(../)seeother（/）前者返回到上层目录，后者重定向到当强目录，造成 无限次的重定向，是一种错误的用法。&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/28/webpy-note</link>
                <guid>http://matrixorz.github.io/2013/07/28/webpy-note</guid>
                <pubDate>2013-07-28T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>sqlalchemy dynamic mapping</title>
                <description>&lt;pre&gt;&lt;code&gt;from sqlalchemy import *
from sqlalchemy.orm import *

metadata=MetaData(create_engine(&amp;quot;sqlite://&amp;quot;,echo=True)
t1=Table(&amp;quot;t1&amp;quot;,metadata,Column(&amp;#39;id&amp;#39;,Integer,primary_key=True))
t2=Table(&amp;quot;t2&amp;quot;,metadata,Column(&amp;quot;id&amp;quot;,Integer,primary_key=True))
metadata.create_all()

def map_class_to_some_table(cls,table,entity_name,**kw):
    newcls=type(entity_name,(cls,),{})
    mapper(newcls,table,**kw)
    return newcls
   
class Foo(object):
    pass

T1Foo=map_class_to_some_table(Foo,t1,&amp;quot;T1Foo&amp;quot;)
T2Foo=map_class_to_some_table(Foo,t2,&amp;quot;T2Foo&amp;quot;)

sess=sessionmaker()()
sess.add_all([T1Foo(),T1Foo(),T2Foo(),T1Foo()])
print sess.query(T1Foo).all()
print sess.query(T2Foo).all()&lt;/code&gt;&lt;/pre&gt;</description>
                <link>http://matrixorz.github.io/2013/07/26/sqlalchemy-dynamic-mapping</link>
                <guid>http://matrixorz.github.io/2013/07/26/sqlalchemy-dynamic-mapping</guid>
                <pubDate>2013-07-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>premature optimization</title>
                <description>&lt;p&gt;http://scientopia.org/blogs/goodmath/2011/05/03/the-perils-of-premature-optimization/&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/26/premature-optimization</link>
                <guid>http://matrixorz.github.io/2013/07/26/premature-optimization</guid>
                <pubDate>2013-07-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>memo on the trade</title>
                <description>&lt;p&gt;RTA&lt;/p&gt;

&lt;p&gt;www.lowindata.com&lt;/p&gt;

&lt;p&gt;backbonejs:www.icoding.co/2012/04/backbonejs-html-2&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/22/memo-on-the-trade</link>
                <guid>http://matrixorz.github.io/2013/07/22/memo-on-the-trade</guid>
                <pubDate>2013-07-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>backbonejs</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/07/21/backbonejs</link>
                <guid>http://matrixorz.github.io/2013/07/21/backbonejs</guid>
                <pubDate>2013-07-21T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>python asynchrous network</title>
                <description>&lt;hr /&gt;
&lt;h2 id=&quot;selectpollepoll_test_in_python&quot;&gt;select,poll,epoll test in python&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;select test&lt;/em&gt;&lt;/strong&gt; selecttest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import select
import socket
import Queue

#create a socket
server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
server.setblocking(False)
#set option reused
server.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)

server_address=(&amp;#39;localhost&amp;#39;,10001)
server.bind(server_address)

server.listen(10)

#sockets from which we except to read
inputs=[server]

#sockets from which we expect to write
outputs=[]

#Outgoing message queues (socket:Queue)
message_queues={}

#A optional parameter for select is TIMEOUT
timeout=20

while inputs:
    print &amp;quot;waiting for next event&amp;quot;
    #first parameter--read list,second parameter--write list,third parameter--error list
    readable,writable,exceptional=select.select(inputs,outputs,inputs,timeout)

    #when timeout reached,select return three empty list
    if not (readable or writable or exceptional):
        print &amp;quot;Time out!&amp;quot;
        break;
    for s in readable:
        if s is server:
            #A &amp;quot;readable&amp;quot; socket is ready to accept a connection
            connection,client_address=s.accept()
            print &amp;quot;  connection from&amp;quot;,client_address
            connection.setblocking(0)
            inputs.append(connection)
            message_queues[connection]=Queue.Queue()
        else:
            data=s.recv(1024)
            if data:
                print &amp;quot;received &amp;quot;,data, &amp;quot;from &amp;quot;,s.getpeername()
                message_queues[s].put(data)
                #Add output  channel for response
                if s not in outputs:
                    outputs.append(s)
            else:
                #Interpret empty result as closed connection
                print &amp;quot; closing&amp;quot;, client_address
                if s in outputs:
                    outputs.remove(s)
                inputs.remove(s)
                s.close()
                #remove message queue
                del message_queues[s]
    for s in writable:
        try:
            next_msg=message_queues[s].get_nowait()
        except Queue.Empty:
            print &amp;quot; &amp;quot;,s.getpeername,&amp;quot; queue empty&amp;quot;
            outputs.remove(s)
        else:
            print &amp;quot;sending &amp;quot;,next_msg,&amp;quot; to&amp;quot;,s.getpeername()
            s.send(next_msg)
    for s in exceptional:
        print &amp;quot; exception condition on &amp;quot;,s.getpeername()
        #stop listening for input on the connection
        inputs.remove(s)
        if s in outputs:
            outputs.remove(s)
        s.close()
        #Remove message queue&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;polltest&lt;/em&gt;&lt;/strong&gt; polltest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket
import select
import Queue

server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
server.setblocking(False)
server.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
server_address=(&amp;quot;localhost&amp;quot;,10001)

print &amp;quot;Starting up on %s port %s&amp;quot; % server_address
server.bind(server_address)
server.listen(5)
message_queues={}
#The timeout value is represente in milliseconds,instead of seconds
timeout=100
#Create a limit for the next
READ_ONLY=(select.POLLIN | select.POLLPRI | select.POLLHUP | select.POLLERR)
READ_WRITE=(READ_ONLY|select.POLLOUT)

#set up the poller
poller=select.poll()
poller.register(server,READ_ONLY)
#map file descriptors to socket objects
fd_to_socket={server.fileno():server,}
while True:
    print &amp;quot;Waiting for the next event&amp;quot;
    events=poller.poll(timeout)
    print &amp;quot;*&amp;quot;*20
    print len(events)
    print events
    print &amp;quot;*&amp;quot;*20
    for fd,flag in events:
        s=fd_to_socket[fd]
        if flag &amp;amp; (select.POLLIN|select.POLLPRI):
            if s is server:
                #A readable socket is ready to accept a connection
                connection,client_address=s.accept()
                print &amp;quot;Connection &amp;quot;,client_address
                connection.setblocking(False)

                fd_to_socket[connection.fileno()]=connection
                poller.register(connection,READ_ONLY)

                #Give the connection a queue to send data
                message_queues[connection]=Queue.Queue
            else:
                data=s.recv(1024)
                if data:
                    # A readable client socket has data
                    print &amp;quot; received %s from %s &amp;quot; % (data,s.getpeername())
                    message_queues[s].put(data)
                    poller.modify(s,READ_WRITE)
                else:
                    #Close the connection
                    print &amp;quot; closing &amp;quot;,s.getpeername()
                    #Stop listening for input on the connection
                    poller.unregister(s)
                    s.close()
                    del message_queues[s]
        elif flag &amp;amp; select.POLLHUP:
            #A client that &amp;quot;Hang up&amp;quot;,to be closed.
            print &amp;quot;closing &amp;quot;,s.getpeername,&amp;quot;(HUP)&amp;quot;
            poller.unregister(s)
            s.close()
        elif flag &amp;amp; select.POLLOUT:
            #SOCKET is ready to send DATA,if there is any to send
            try:
                next_msg=message_queues[s].get_nowait()
            except Queue.Empty:
                #No messages waiting so stop checking
                print s.getpeername,&amp;quot; queue empty&amp;quot;
                poller.modify(s,READ_ONLY)
            else:
                print &amp;quot; sending %s to %s&amp;quot; %(next_msg,s.getpeername())
                s.send(next_msg)
        elif flag &amp;amp; select.POLLERR:
            #Any events with POLLER cause the server to close the sockets
            print &amp;quot; exception on&amp;quot;,s.getpeername()
            poller.unregister(s)
            s.close()
            del message_queues[s]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;epoll test&lt;/em&gt;&lt;/strong&gt; epolltest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket,logging
import select,errno

logger=logging.getLogger(&amp;quot;network-server&amp;quot;)

def InitLog():
    logger.setLevel(logging.DEBUG)

    fh=logging.FileHandler(&amp;quot;network-server.log&amp;quot;)
    fh.setLevel(logging.DEBUG)
    ch=logging.StreamHandler()
    ch.setLevel(logging.DEBUG)

    formatter=logging.Formatter(&amp;quot;%(asctime)s - %(name)s - %(levelname)s -%(message)s&amp;quot;)
    ch.setFormatter(formatter)
    fh.setFormatter(formatter)

    logger.addHandler(fh)
    logger.addHandler(ch)

if __name__==&amp;quot;__main__&amp;quot;:
    InitLog()

    try:
        listen_fd=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    except socket.error,msg:
        logger.error(&amp;quot;create a socket failed&amp;quot;)

    try:
        listen_fd.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
    except socket.error,msg:
        logger.error(&amp;quot;setsocketopt error&amp;quot;)

    try:
        listen_fd.bind((&amp;#39;&amp;#39;,10001))
    except socket.error,msg:
        logger.error(&amp;quot;listen file id bind ip error&amp;quot;)

    try:
        listen_fd.listen(10)
    except socket.error,msg:
        logger.error(msg)
    try:
        epoll_fd=select.epoll()
        epoll_fd.register(listen_fd.fileno(),select.EPOLLIN)
    except select.error,msg:
        logger.error(msg)
    
    connections={}
    addresses={}
    datalist={}
    while True:
        epoll_list = epoll_fd.poll()
        for fd,events in epoll_list:
            if fd==listen_fd.fileno():
                conn,addr=listen_fd.accept()
                logger.debug(&amp;quot;accept connction from  %s,%d,fd = %d&amp;quot; %(addr[0],addr[1],conn.fileno()))
                conn.setblocking(0)
                epoll_fd.register(conn.fileno(),select.EPOLLIN|select.EPOLLET)
                connections[conn.fileno()]=conn 
                addresses[conn.fileno()]=addr
            elif select.EPOLLIN  &amp;amp; events:
                datas=&amp;#39;&amp;#39;
                while True:
                    try:
                        data=connections[fd].recv(10)
                        if not data and not datas:
                            epoll_fd.unregister(fd)
                            connections[fd].close()
                            logger.debug(&amp;quot;%s,%d closed&amp;quot; % (addresses[fd][0],addresses[fd][1]))
                            
                            break
                        else:
                            datas+=data 
                    except socket.error,msg:
                        if msg.errno==errno.EAGAIN:
                            logger.debug(&amp;quot;%s receive %s&amp;quot; % (fd,datas))
                            datalist[fd]=datas
                            epoll_fd.modify(fd,select.EPOLLET|select.EPOLLOUT)
                            break
                        else:
                            epoll_fd.unregister(fd)
                            connections[fd].close()
                            logger.error(msg)
                            break
            elif select.EPOLLHUP &amp;amp; events:
                epoll_fd.unregister(fd)
                connections[fd].close()
                logger.debug(&amp;quot;%s ,%d closed&amp;quot; % (addresses[fd][0],addresses[fd][1]))
            elif select.EPOLLOUT &amp;amp; events:
                sendLen=0
                while True:
                    sendLen += connections[fd].send(datalist[fd][sendLen:])
                    if sendLen == len(datalist[fd]):
                         break
                epoll_fd.modify(fd,select.EPOLLIN|select.EPOLLET)
            else:
                continue&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;common client&lt;/em&gt;&lt;/strong&gt; commontest.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import socket
messages = [&amp;quot;This is the message&amp;quot;,
         &amp;quot;It will be send&amp;quot;,
         &amp;quot;in parts&amp;quot;]

print &amp;quot;Connect to the server&amp;quot;

server_address=(&amp;quot;localhost&amp;quot;,10001)

#Create a TCP/IP sock
socks=[]
for i in range(10):
     socks.append(socket.socket(socket.AF_INET,socket.SOCK_STREAM))

for s in socks:
    s.connect(server_address)

counter=0
for message in messages:
    for s in socks:
        counter+=1
        print &amp;quot; %s sending %s &amp;quot;%(s.getpeername(),message+&amp;quot; version &amp;quot;+str(counter))
        s.send(message+&amp;quot; version &amp;quot;+str(counter))
    for s in socks:
        data=s.recv(1024)
        print &amp;quot; %s received %s &amp;quot; % (s.getpeername(),data)
        if not data:
            print &amp;quot;closing socket&amp;quot;,s.getpeername()
            s.close()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对epoll的使用有一篇很好的博客：scotdoyle.com/python-epoll-howto.html&lt;/p&gt;

&lt;p&gt;针对asyncore的介绍和使用有很好的两篇博客： blog.csdn.net/livefun/article/details/8721772&lt;/p&gt;

&lt;p&gt;http://www.nightmare.com/medusa/async_sockets.html&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/15/python-asynchrous-network</link>
                <guid>http://matrixorz.github.io/2013/07/15/python-asynchrous-network</guid>
                <pubDate>2013-07-15T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>mysql export and import</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/07/05/mysql-export-and-import</link>
                <guid>http://matrixorz.github.io/2013/07/05/mysql-export-and-import</guid>
                <pubDate>2013-07-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Run Multiple-python on your ubuntu</title>
                <description>&lt;p&gt;安装python3.3在ubuntu上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties
sudo add-apt-repository ppa:fkrull/deadsnakes
sudo apt-get update
sudo apt-get install python3.3&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立软链接：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s /usr/bin/python3.3 /usr/bin/python3.3m&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安转python2.7.5再ubuntu上:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:fkrull/deadsnakes
sudo apt-get update
sudo apt-get install python2.4 python2.5 python2.6&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用virtualenv来定制自己的环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;virtualenv -p /usr/bin/python3.3 python3.3env
virtualenv -p /usr/bin/python2.7.5 python2.7.5env&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok!&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/02/install-multiple-version-of-python-with-virtualenv</link>
                <guid>http://matrixorz.github.io/2013/07/02/install-multiple-version-of-python-with-virtualenv</guid>
                <pubDate>2013-07-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>中文测试1</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/07/02/1</link>
                <guid>http://matrixorz.github.io/2013/07/02/1</guid>
                <pubDate>2013-07-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>中文</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/07/02/</link>
                <guid>http://matrixorz.github.io/2013/07/</guid>
                <pubDate>2013-07-02T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>text mining</title>
                <description>&lt;p&gt;why,why i have no idea in my mind?&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/07/01/text-mining</link>
                <guid>http://matrixorz.github.io/2013/07/01/text-mining</guid>
                <pubDate>2013-07-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>lucene</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/07/01/lucene</link>
                <guid>http://matrixorz.github.io/2013/07/01/lucene</guid>
                <pubDate>2013-07-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>no plan</title>
                <description>&lt;p&gt;计划如下： TextMining计划 Startups课程 Trade Analysis项目跟进&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/06/29/no-plan</link>
                <guid>http://matrixorz.github.io/2013/06/29/no-plan</guid>
                <pubDate>2013-06-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>markdown test</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/06/23/markdown-test</link>
                <guid>http://matrixorz.github.io/2013/06/23/markdown-test</guid>
                <pubDate>2013-06-23T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>markdown测试</title>
                <description>&lt;p&gt;一个段落是由一个以上相连接的行句组成，而一个以上的空行会切分出不同的段落（空行的定义是显示上看起来像是空行，便会被视为空行，比方说，若某一行只包含空白和tab，则该行也会被视为空行），一般的段落不许要用空白或段行缩排。&lt;/p&gt;

&lt;p&gt;「一個以上相連接的行句組成」這句話其實暗示了 Markdown 允許段落內的強迫斷行，這個特性和其他大部分的 text-to-HTML 格式不一樣（包括 MovableType 的「Convert Line Breaks」選項），其它的格式會把每個斷行都轉成 &lt;br /&gt; 標籤。&lt;/p&gt;

&lt;h1 id=&quot;this_is_an_h1&quot;&gt;This is an H1&lt;/h1&gt;

&lt;h2 id=&quot;this_is_an_h2&quot;&gt;This is an H2&lt;/h2&gt;

&lt;p&gt;Blockquotes&lt;br /&gt;markdown 使用email形式的区块引言，如果你很熟悉如何再email信件中引言，你就知道怎么再markdown文件中建立一个区块引言，那会看起来像是你强迫段行然后在每行的最前面加上&amp;gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a blockquote with two paragraphs.Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/p&gt;

&lt;p&gt;Donec sit amet nisl. blabla&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;markdown也允许你只在整个段落的第一行最前面加上&amp;gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a block&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ksjfkfkfj&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Donecfkkf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;blabla&lt;/p&gt;

&lt;p&gt;区块引言可以有阶层&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this is the first level of quoting&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this is the nested blockquote&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back to the first level&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;引言的区块内可以使用其他的markdown语法，包括标题、清单、程序代码块等：&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2 id=&quot;this_is_a_header&quot;&gt;This is a header&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;This is the first item&lt;/li&gt;

&lt;li&gt;This is the second list item&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here’s some example code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;justpic.org&#39;&gt;justpic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;return shell_exec(“echo $input|$markdown_script”);&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;程序代码块： 与程序相关的写作是标签语言原始代码通常会有已经排版好的程序代码快，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是按照原来的样子演示，markdown会用标签来把程序区块包含起来 要在markdown中建立程序代码快很简单，只要简单地缩排四个空格或一个tab就可以，例如，下面的输入 This is a normal paragraph:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block
import sys&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;分割线： 你可以在一行中用三个或以上的星号、减号、底线来建立一个分割线行内不能有其他东西，你也可以再星号中插入空白&lt;/p&gt;
&lt;hr /&gt;&lt;hr /&gt;&lt;hr /&gt;&lt;hr /&gt;
&lt;p&gt;区段元素 markdown支持两种形式的连接语法：行内和参考两种形式 不管哪种，链接的文字要用【放括号】百标记&lt;br /&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;an example&lt;/a&gt; inline link&lt;br /&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no title attribute.&lt;/p&gt;

&lt;p&gt;如果你是要链接到同样主机的资源，你可以使用相对路径： See my&lt;a href=&quot;/about/&quot;&gt;about&lt;/a&gt;page for details.&lt;/p&gt;

&lt;p&gt;来个程序用多个反引号来包含&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;import sys&lt;/code&gt;&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/06/23/markdown</link>
                <guid>http://matrixorz.github.io/2013/06/23/markdown</guid>
                <pubDate>2013-06-23T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>new post</title>
                <description>&lt;h1 id=&quot;622&quot;&gt;6月22日小结&lt;/h1&gt;

&lt;p&gt;写个总结，python学习情况停滞不前，最大的困难还是不能专心做一件事情，注意力容易分散，接下来的时间里，要以论文为主，学会总结，翻译英文文章，机器学习的学习还没有完，要每天一总结，学到了什么，还有什么不懂的，英语的学习还是以shanbay为主，注重效果，不要太看重计划。&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/06/22/new-post</link>
                <guid>http://matrixorz.github.io/2013/06/22/new-post</guid>
                <pubDate>2013-06-22T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>com learning</title>
                <description>&lt;p&gt;&lt;a href=&#39;http://www.vckbase.com/index.php/wv/1315&#39;&gt;COM Learning&lt;/a&gt;&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/2013/06/14/com-learning</link>
                <guid>http://matrixorz.github.io/2013/06/14/com-learning</guid>
                <pubDate>2013-06-14T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>protobuffer</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/06/11/protobuffer</link>
                <guid>http://matrixorz.github.io/2013/06/11/protobuffer</guid>
                <pubDate>2013-06-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Plan in June 11</title>
                <description></description>
                <link>http://matrixorz.github.io/2013/06/11/plan-in-june-11</link>
                <guid>http://matrixorz.github.io/2013/06/11/plan-in-june-11</guid>
                <pubDate>2013-06-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Network Text Analysis</title>
                <description>&lt;h1 id=&quot;_&quot;&gt;网络 文本语义分析&lt;/h1&gt;</description>
                <link>http://matrixorz.github.io/network,plsa/2013/06/11/network-text-analysis</link>
                <guid>http://matrixorz.github.io/network,plsa/2013/06/11/network-text-analysis</guid>
                <pubDate>2013-06-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>resolution to scipy installation error</title>
                <description>&lt;p&gt;安装scipy时出现Blas错误时，需安装以下几个包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get libblas3gf libblas-doc libblas-dev liblapack3gf liblapack-doc liblapack-dev&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装matplib出现ft2build.h等头文件无法找出时，解决方法： 具体解决方案如下： （1）安装freetype2开发包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libfreetype6-dev&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（2）安装png开发包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libpng-dev&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（3）安装matplotlib:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo python setup.py install&lt;/code&gt;&lt;/pre&gt;</description>
                <link>http://matrixorz.github.io/python/2013/06/08/scipy</link>
                <guid>http://matrixorz.github.io/python/2013/06/08/scipy</guid>
                <pubDate>2013-06-08T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install wine on ubuntu 12.04</title>
                <description>&lt;h1 id=&quot;wine_error&quot;&gt;Wine error&lt;/h1&gt;

&lt;p&gt;Code for install wine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo setcap CAP_NET_RAW=ep /usr/bin/wine
sudo setcap CAP_NET_RAW=ep /usr/bin/wineserver
sudo setcap CAP_NET_RAW=ep /путь_до_л2/l2.exe&lt;/code&gt;&lt;/pre&gt;</description>
                <link>http://matrixorz.github.io/linux/2013/06/06/wine</link>
                <guid>http://matrixorz.github.io/linux/2013/06/06/wine</guid>
                <pubDate>2013-06-06T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>install hdf5 on ubuntu</title>
                <description>&lt;h1 id=&quot;install_hdf5_on_ubuntu_1204&quot;&gt;install hdf5 on ubuntu 12.04&lt;/h1&gt;

&lt;p&gt;you can probably install the debian libraries into quantal with no issues, precise is less likely to work, but it might.&lt;/p&gt;

&lt;p&gt;possibly you will have to build it from source to get everything right.&lt;/p&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install devscripts equivs ubuntu-dev-tools 
pull-debian-source hdf5 experimental    
cd hdf5-*
sudo mk-build-deps -ir
debuild -us -uc&lt;/code&gt;&lt;/pre&gt;</description>
                <link>http://matrixorz.github.io/python/yt-project/2013/06/05/installhdf5</link>
                <guid>http://matrixorz.github.io/python/yt-project/2013/06/05/installhdf5</guid>
                <pubDate>2013-06-05T11:11:11Z</pubDate>
        </item>

        <item>
                <title>Resume</title>
                <description>&lt;h1 id=&quot;hai_cao&quot;&gt;Hai Cao&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;mailto:&amp;#109;&amp;#097;&amp;#116;&amp;#114;&amp;#105;&amp;#120;&amp;#046;&amp;#111;&amp;#114;&amp;#122;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#109;&amp;#097;&amp;#116;&amp;#114;&amp;#105;&amp;#120;&amp;#046;&amp;#111;&amp;#114;&amp;#122;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://justpic.org&quot;&gt;http://justpic.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;I am a software developer with an interest in communication and design.I enjoy experimenting with new&lt;/p&gt;

&lt;h2 id=&quot;education&quot;&gt;Education&lt;/h2&gt;

&lt;p&gt;Computer Science and Technoly,M.S. Fall 2012-Spring 2015 Chongqing University,Chongqing&lt;/p&gt;

&lt;h2 id=&quot;proficiency&quot;&gt;Proficiency&lt;/h2&gt;

&lt;p&gt;python ,C++&lt;/p&gt;

&lt;h2 id=&quot;expricence&quot;&gt;Expricence&lt;/h2&gt;

&lt;h3 id=&quot;msra&quot;&gt;MSRA&lt;/h3&gt;

&lt;h4 id=&quot;software_developer&quot;&gt;Software Developer-&lt;/h4&gt;</description>
                <link>http://matrixorz.github.io/2013/06/05/resume</link>
                <guid>http://matrixorz.github.io/2013/06/05/resume</guid>
                <pubDate>2013-06-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Welcome to just pic!</title>
                <description>&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;def&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;print_hi&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;name&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
  &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&#39;si&#39;&gt;#{&lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;name&lt;/span&gt;&lt;span class=&#39;si&#39;&gt;}&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;span class=&#39;n&#39;&gt;print_hi&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Leos&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;#=&amp;gt; prints &amp;#39;Hi, justpic&amp;#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
                <link>http://matrixorz.github.io/justpic/2013/06/03/welcome-to-justpic</link>
                <guid>http://matrixorz.github.io/justpic/2013/06/03/welcome-to-justpic</guid>
                <pubDate>2013-06-03T23:40:26Z</pubDate>
        </item>

        <item>
                <title>python machine learning</title>
                <description>&lt;h1 id=&quot;python_logging&quot;&gt;python logging&lt;/h1&gt;

&lt;p&gt;pythonbrew一个新的管理包?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.每个module，class都用自己的logger，当你写的code，是一个被人使用的module，请不要去做多余的设定&lt;/li&gt;

&lt;li&gt;2.logger的名字为了要能方便的找出问题，所以不要乱取，通常都是以module或是class的名称来命名&lt;/li&gt;

&lt;li&gt;3.logging的设定，由整个应用程序的main函数来决定，比如说决定该把log写道档案还是将log传送到syslogd。我们目前是为了简单好用才以logging.basicConfig当作例子&lt;/li&gt;
&lt;/ul&gt;</description>
                <link>http://matrixorz.github.io/2013/06/03/loginpython</link>
                <guid>http://matrixorz.github.io/2013/06/03/loginpython</guid>
                <pubDate>2013-06-03T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>deeplearning</title>
                <description>&lt;h2&gt; deeplearning &lt;/h2&gt;&lt;p&gt;推荐：&lt;a href=&#39;deepleaning.net/tutorial/deeplearning.pdf&#39;&gt;deeplearning学习&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;10.DEEP BELIEF NETWORKS:(DBN)&lt;/p&gt;

&lt;p&gt;机器学习的两次浪潮：&lt;/p&gt;

&lt;p&gt;浅层机器学习模型：SVM、Boosting、最大熵方法（如LR，Logistic Regression)等 这些模型的结构基本上可以看成带有一层隐层节点(如SVM、Boosting），或没有隐层节点（如LR）。这些模型无论实在理论分析还是应用中都获得了巨大的成功。相比之下，由于理论分析的难度大，这个时期浅层人工神经网络反而相对沉寂。&lt;/p&gt;

&lt;p&gt;深度学习： 很多隐层的人工神经网络具有优异的特征学习能力，学习得到的特征对数据有更本质的刻画，从而有利于可视化或分类。深度神经在训练上的难度，可以通过“逐层初始化”(layer-wisepre-training)来有效克服。&lt;/p&gt;
&lt;p&gt;03 Jun 2013&lt;/p&gt;</description>
                <link>http://matrixorz.github.io/machine/learning/2013/06/03/deeplearn</link>
                <guid>http://matrixorz.github.io/machine/learning/2013/06/03/deeplearn</guid>
                <pubDate>2013-06-03T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
